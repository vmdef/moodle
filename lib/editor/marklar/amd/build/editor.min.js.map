{"version":3,"sources":["../src/editor.js"],"names":["define","$","Y","str","log","ajax","event","filepicker","ImagePaster","MarklarEditor","textarea","initparams","M","editor_marklar","fpoptions","elementid","filepickeroptions","initTextArea","initFormatSelector","initPanel","initFilesEmbedding","initPreview","initSyntaxHelp","initImagePaster","prototype","self","addClass","css","fname","attr","replace","form","closest","formatSelector","find","length","formatHidden","formatId","formatName","parseInt","error","append","remove","get_string","done","formatTitle","text","fail","ex","wrap","panel","insertAfter","editpanel","appendTo","prepend","use","init","canShowFilepicker","strinsertimage","button","click","e","preventDefault","showFilepicker","data","imageEmbedded","replaceWith","insertImageButton","strinsertlink","insertLink","insertFileButton","previewBody","hide","before","get_strings","key","component","then","strings","previewButtonOn","on","previewOn","bind","previewButtonOff","previewOff","buttonPreview","strpreviewloading","show","html","height","previewLoad","args","val","format","contextid","call","methodname","err","message","response","notifyFilterContentUpdated","insertText","url","texttoshow","file","inserttext","areatext","selectionStart","prop","selectionEnd","substring","syntaxBody","syntaxButtonOn","syntaxOn","syntaxButtonOff","syntaxOff","buttonSyntax","catch","is","image","strsyntaxloading","syntaxLoad","strsyntax","params","document","getElementById","Error"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * @module      editor_marklar/editor\n * @package     editor_marklar\n * @copyright   2016 David Mudrak <david@moodle.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine([\n        'jquery',\n        'core/yui',\n        'core/str',\n        'core/log',\n        'core/ajax',\n        'core/event',\n        'editor_marklar/filepicker',\n        'editor_marklar/imagepaster',\n], function($, Y, str, log, ajax, event, filepicker, ImagePaster) {\n\n    \"use strict\";\n\n    /**\n     * @constructor\n     * @param {Element} textarea\n     * @param {Object} initparams\n     */\n    function MarklarEditor(textarea, initparams) {\n\n        this.initparams = initparams;\n\n        if (typeof M.editor_marklar.fpoptions[initparams.elementid] !== \"undefined\") {\n            this.initparams.filepickeroptions = M.editor_marklar.fpoptions[initparams.elementid];\n        }\n\n        this.initTextArea(textarea);\n        this.initFormatSelector();\n        this.initPanel();\n        this.initFilesEmbedding();\n        this.initPreview();\n        this.initSyntaxHelp();\n        this.initImagePaster();\n    }\n\n    /**\n     * Initialize the text area element.\n     *\n     * @param {Element} textarea\n     */\n    MarklarEditor.prototype.initTextArea = function(textarea) {\n        var self = this;\n\n        self.textarea = textarea\n            .addClass('marklar-textarea')\n            .css('box-sizing', 'border-box')\n            .css('width', '100%')\n            .css('background-color', 'white')\n            .css('margin-bottom', '10px')\n            .css('padding', '7px');\n    };\n\n    /**\n     * Initialize the text format selector.\n     */\n    MarklarEditor.prototype.initFormatSelector = function() {\n        var self = this;\n\n        // Expected name of the field with the text format.\n        var fname = self.textarea.attr('name').replace('[text]', '[format]');\n        var form = self.textarea.closest('form');\n\n        if (fname === self.textarea.attr('name')) {\n            // This may happen in places like mod_data or admin_setting_confightmleditor\n            // that keep their own naming rules for the format.\n            return;\n        }\n\n        // Locate the text format selector for our textarea.\n        self.formatSelector = form.find('select[name=\"' + fname + '\"]');\n\n        if (self.formatSelector.length) {\n            // Great, there is the drop down format selector found. We're done here.\n            return;\n\n        } else {\n            // There is no dropdown menu with the format. Try to find the hidden field holding the format value.\n            var formatHidden = form.find('input[name=\"' + fname + '\"]');\n            var formatId;\n            var formatName;\n\n            if (formatHidden.length) {\n                formatId = parseInt(formatHidden.attr('value'));\n            } else {\n                // No text format specified.\n                log.error('marklar: format field not found: ' + fname);\n                return;\n            }\n\n            switch (formatId) {\n                case 0:\n                    formatName = 'formattext';\n                    break;\n                case 1:\n                    formatName = 'formathtml';\n                    break;\n                case 2:\n                    formatName = 'formatplain';\n                    break;\n                case 4:\n                    formatName = 'formatmarkdown';\n                    break;\n                default:\n                    log.error('marklar: unknown text format ' + formatId);\n                    self.formatSelector = null;\n                    return;\n            }\n\n            // Convert the hidden field into a single item selector.\n            self.formatSelector = $('<select class=\"custom-select\" name=\"' + fname + '\"></select>')\n                .append($('<option value=\"' + formatId + '\">' + formatName + '</option>'));\n            formatHidden.remove();\n\n            // Localize the format name.\n            str.get_string(formatName, 'core_moodle').done(function(formatTitle) {\n                self.formatSelector.find('option[value=\"' + formatId + '\"]').text(formatTitle);\n            }).fail(function(ex) {\n                log.error(ex);\n                return;\n            });\n        }\n    };\n\n    /**\n     * Initialize the bottom panel.\n     */\n    MarklarEditor.prototype.initPanel = function() {\n        var self = this;\n\n        // Wrap the textarea.\n        self.textarea.wrap('<div class=\"marklar-wrapper\"></div>');\n\n        // Insert the panel region right after the textarea.\n        self.panel = $('<div class=\"marklar-panel\"></div>').insertAfter(self.textarea);\n\n        // Create a subpanel within the panel with widgets that should be visible in editing mode only.\n        self.editpanel = $('<div class=\"marklar-edit-panel\"></div>').appendTo(self.panel);\n\n        // Move the format selector to the panel.\n        if (self.formatSelector) {\n            self.editpanel.append(self.formatSelector);\n            self.formatSelector.attr('data-marklar-widget', 'format-select');\n        }\n\n        // Create buttons placeholders in the panel so that the order or async initialization does not affect display order.\n        self.panel.prepend('<span data-marklar-placeholder=\"preview\" />');\n        self.editpanel.append('<span data-marklar-placeholder=\"syntax\" />');\n        self.editpanel.append('<span data-marklar-placeholder=\"insert-image\" />');\n        self.editpanel.append('<span data-marklar-placeholder=\"insert-file\" />');\n    };\n\n    /**\n     * Initialize support for embedding images via file picker.\n     *\n     * @method initFilesEmbedding\n     */\n    MarklarEditor.prototype.initFilesEmbedding = function() {\n\n        if (!(\"filepickeroptions\" in this.initparams)) {\n            log.error(this.initparams.elementid + \": File picker options not found\");\n            return;\n        }\n\n        var self = this;\n\n        Y.use('core_filepicker', function() {\n            self.filepicker = filepicker.init(self.initparams.filepickeroptions);\n            if (self.filepicker.canShowFilepicker(\"image\")) {\n                str.get_string(\"insertimage\", \"editor_marklar\").done(function(strinsertimage) {\n                    var button = $('<button class=\"btn btn-default\" data-marklar-widget=\"insert-image\" />');\n                    button.text(strinsertimage);\n                    button.click(function(e) {\n                        e.preventDefault();\n                        self.filepicker.showFilepicker(\"image\", function(data) {\n                            self.imageEmbedded(data);\n                        });\n                    });\n                    self.panel.find('[data-marklar-placeholder=\"insert-image\"]').replaceWith(button);\n                    self.insertImageButton = button;\n                });\n            }\n            if (self.filepicker.canShowFilepicker(\"link\")) {\n                str.get_string(\"insertlink\", \"editor_marklar\").done(function(strinsertlink) {\n                    var button = $('<button class=\"btn btn-default\" data-marklar-widget=\"insert-file\" />');\n                    button.text(strinsertlink);\n                    button.click(function(e) {\n                        e.preventDefault();\n                        self.filepicker.showFilepicker(\"link\", function(data) {\n                            self.insertLink(data);\n                        });\n                    });\n                    self.panel.find('[data-marklar-placeholder=\"insert-file\"]').replaceWith(button);\n                    self.insertFileButton = button;\n                });\n            }\n        });\n    };\n\n    /**\n     * Initialize the context preview support.\n     *\n     * @return {boolean}\n     */\n    MarklarEditor.prototype.initPreview = function() {\n        var self = this;\n\n        // Check there is the format selector available.\n        if (!self.formatSelector) {\n            return false;\n        }\n\n        self.previewBody = $('<div class=\"marklar-preview\" />')\n            .hide();\n        self.panel.before(self.previewBody);\n        return str.get_strings([\n                {key: 'previewon', component: 'editor_marklar'},\n                {key: 'previewoff', component: 'editor_marklar'}\n        ]).then(function(strings) {\n            self.previewButtonOn = $('<button class=\"btn btn-default\" data-marklar-widget=\"preview-on\" />')\n                .text(strings[0])\n                .on('click', self.previewOn.bind(self));\n            self.previewButtonOff = $('<button class=\"btn btn-default\" data-marklar-widget=\"preview-off\" >')\n                .text(strings[1])\n                .on('click', self.previewOff.bind(self))\n                .hide();\n            var buttonPreview = $('<div class=\"marklar-preview-controls\" />')\n                .append(self.previewButtonOn)\n                .append(self.previewButtonOff);\n            self.panel.find('[data-marklar-placeholder=\"preview\"]').replaceWith(buttonPreview);\n            return true;\n        });\n    };\n\n    /**\n     * Toggle preview mode on.\n     *\n     * @param {Event} e\n     * @return {boolean}\n     */\n    MarklarEditor.prototype.previewOn = function(e) {\n        var self = this;\n        e.preventDefault();\n\n        return str.get_string('previewloading', 'editor_marklar').then(function(strpreviewloading) {\n            self.previewButtonOn.hide();\n            self.previewButtonOff.show();\n            self.editpanel.hide();\n\n            self.previewBody.html('<div class=\"marklar-preview-loading\">' + strpreviewloading + '</div>');\n            self.previewBody.height(self.textarea.height());\n\n            self.textarea.hide();\n            self.previewBody.show();\n            self.previewLoad();\n\n            return true;\n        });\n    };\n\n    /**\n     * Toggle preview mode off.\n     *\n     * @param {Event} e\n     */\n    MarklarEditor.prototype.previewOff = function(e) {\n        var self = this;\n        e.preventDefault();\n\n        self.previewButtonOff.hide();\n        self.previewButtonOn.show();\n        self.editpanel.show();\n\n        self.previewBody.hide();\n        self.previewBody.html('');\n        self.textarea.show();\n    };\n\n    /**\n     * Load and display the text preview.\n     *\n     * @return {boolean}\n     */\n    MarklarEditor.prototype.previewLoad = function() {\n        var self = this;\n        var args = {\n            text: self.textarea.val(),\n            format: self.formatSelector.val(),\n            contextid: self.initparams.contextid\n        };\n\n        return ajax.call([{\n            methodname: 'editor_marklar_get_preview',\n            args: args\n        }])[0].fail(function(err) {\n            self.previewBody.html('<div class=\"alert alert-error\"><b>Error:</b> ' + err.message + '</div>');\n            log.error(err);\n            return false;\n\n        }).then(function(response) {\n            self.previewBody.html(response.html);\n            event.notifyFilterContentUpdated(self.previewBody);\n            return true;\n        });\n    };\n\n    /**\n     * This is called once the use picks an image via filepicker.\n     *\n     * @param {Object} data\n     */\n    MarklarEditor.prototype.imageEmbedded = function(data) {\n        if (\"url\" in data) {\n            this.insertText(\"<img alt=\\\"\\\" class=\\\"img-responsive\\\" src=\\\"\" + data.url + \"\\\"/>\");\n        }\n    };\n\n    /**\n     * This is called once the user picks a file via filepicker.\n     *\n     * @param {Object} data\n     */\n    MarklarEditor.prototype.insertLink = function(data) {\n        if (\"url\" in data) {\n            var texttoshow;\n            if (\"file\" in data && data.file) {\n                texttoshow = data.file.replace(/(\\[|\\])/g, \"_\");\n            } else {\n                texttoshow = \"texttoshow\";\n            }\n            this.insertText(\"[\" + texttoshow + \"](\" + data.url + \")\");\n        }\n    };\n\n    /**\n     * Inserts the given text into the editor.\n     *\n     * @param {String} inserttext\n     */\n    MarklarEditor.prototype.insertText = function(inserttext) {\n        var areatext = this.textarea.val();\n        var selectionStart = this.textarea.prop('selectionStart');\n        var selectionEnd = this.textarea.prop('selectionEnd');\n        this.textarea.val(areatext.substring(0, selectionStart) + inserttext + areatext.substring(selectionEnd));\n    };\n\n    /**\n     * Initialize the syntax help panel.\n     *\n     * @return {boolean}\n     */\n    MarklarEditor.prototype.initSyntaxHelp = function() {\n        var self = this;\n\n        // Check there is the format selector available.\n        if (!self.formatSelector) {\n            return false;\n        }\n\n        self.syntaxBody = $('<div class=\"marklar-syntax-help\" />')\n            .hide();\n        self.editpanel.append(self.syntaxBody);\n        str.get_strings([\n                {key: 'syntaxon', component: 'editor_marklar'},\n                {key: 'syntaxoff', component: 'editor_marklar'},\n        ]).then(function(strings) {\n            self.syntaxButtonOn = $('<button class=\"btn btn-link\" data-marklar-widget=\"syntax-on\" />')\n                .text(strings[0])\n                .on('click', self.syntaxOn.bind(self));\n            self.syntaxButtonOff = $('<button class=\"btn btn-link\" data-marklar-widget=\"syntax-off\" />')\n                .text(strings[1])\n                .on('click', self.syntaxOff.bind(self))\n                .hide();\n            var buttonSyntax = $('<div class=\"marklar-syntax-controls\" />')\n                .append(self.syntaxButtonOn)\n                .append(self.syntaxButtonOff);\n            self.panel.find('[data-marklar-placeholder=\"syntax\"]').replaceWith(buttonSyntax);\n            return true;\n        }).catch(function(err) {\n            log.error(err);\n            return false;\n        });\n\n        // If the syntax help is expanded and the format is changed, update the\n        // syntax help to describe the new format.\n        if (self.formatSelector) {\n            self.formatSelector.on('change', function() {\n                if (self.syntaxBody.is(':visible')) {\n                    self.syntaxButtonOn.click();\n                }\n            });\n        }\n\n        return true;\n    };\n\n    /**\n     * Initialize the image paster module.\n     */\n    MarklarEditor.prototype.initImagePaster = function() {\n        var self = this;\n\n        if (!self.initparams.filepickeroptions.image) {\n            return;\n        }\n\n        ImagePaster.init(self.textarea, self.initparams.filepickeroptions.image, self.imageEmbedded.bind(this));\n    };\n\n    /**\n     * Toggle syntax help on.\n     *\n     * @param {Event} e\n     * @return {boolean}\n     */\n    MarklarEditor.prototype.syntaxOn = function(e) {\n        var self = this;\n        e.preventDefault();\n\n        return str.get_string('syntaxloading', 'editor_marklar').then(function(strsyntaxloading) {\n            self.syntaxButtonOn.hide();\n            self.syntaxButtonOff.show();\n            self.syntaxBody.html('<div class=\"marklar-syntax-loading\">' + strsyntaxloading + '</div>');\n            self.syntaxBody.show();\n            self.syntaxLoad();\n            return true;\n        });\n    };\n\n    /**\n     * Toggle syntax help off.\n     *\n     * @param {Event} e\n     */\n    MarklarEditor.prototype.syntaxOff = function(e) {\n        var self = this;\n        e.preventDefault();\n\n        self.syntaxButtonOff.hide();\n        self.syntaxButtonOn.show();\n        self.syntaxBody.hide();\n        self.syntaxBody.html('');\n    };\n\n    /**\n     * Load and display the text syntax.\n     *\n     * @return {Deferred}\n     */\n    MarklarEditor.prototype.syntaxLoad = function() {\n        var self = this;\n\n        return str.get_string('syntax-format' + self.formatSelector.val(), 'editor_marklar').then(function(strsyntax) {\n            self.syntaxBody.html(strsyntax);\n            return;\n        });\n    };\n\n    return /** @alias module:editor_marklar */ {\n        init: function(params) {\n            var textarea;\n\n            if (\"elementid\" in params) {\n                textarea = $(document.getElementById(params.elementid));\n            } else {\n                throw new Error(\"editor_marklar: Invalid editor init parameter - missing elementid\");\n            }\n\n            if (textarea.length) {\n                return new MarklarEditor(textarea, params);\n            } else {\n                throw new Error(\"Unable to find textarea element\", params.elementid);\n            }\n        }\n    };\n});\n"],"file":"editor.min.js"}