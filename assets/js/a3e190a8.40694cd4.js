(self.webpackChunkdevdocs=self.webpackChunkdevdocs||[]).push([[62148],{88698:function(e,t,n){"use strict";var a=n(75963);t.Z=void 0;var o=a(n(64938)),r=n(85893),i=(0,o.default)((0,r.jsx)("path",{d:"M5 13.18v4L12 21l7-3.82v-4L12 17l-7-3.82zM12 3 1 9l11 6 9-4.91V17h2V9L12 3z"}),"School");t.Z=i},60620:function(e,t,n){"use strict";n.d(t,{nR:function(){return s}});var a=n(67294),o=n(80069),r=n(3905),i=n(78989),l=function(e){return"boolean"!=typeof e&&e?"string"==typeof e||a.isValidElement(e)?a.createElement(r.Zo,null,e):a.createElement(r.Zo,null,a.createElement(e,null)):null},s=function(e){var t,n,s,u=function(e){return Object.assign({filetype:"php",examplePurpose:e.summary},e)}(Object.assign({examplePurpose:null!=(t=null==e?void 0:e.summary)?t:null},e));(u.description=function(e,t){var n=e.description,o=void 0===n?null:n,i=e.extraDescription,s=void 0===i?null:i,u=e.children,d=void 0===u?null:u;if(d){var c=l(d);return a.createElement(r.Zo,null,c)}if(o){var p=l(o);return a.createElement(r.Zo,null,p)}var m=l(t),h=l(s);return m?a.createElement(r.Zo,null,m,h):null}(u,null!=(n=null==u?void 0:u.defaultDescription)?n:null),null!=u&&u.example||null!=u&&u.defaultExample)&&(u.example=(0,i.W7)(u,null!=(s=null==u?void 0:u.defaultExample)?s:null));return(0,o.Z)(u)}},95757:function(e,t,n){"use strict";n.d(t,{D5:function(){return m},dk:function(){return v},i9:function(){return _},Jk:function(){return E},Id:function(){return A},MC:function(){return B},tw:function(){return q},_n:function(){return Y},c5:function(){return Q},Hg:function(){return oe},BO:function(){return ue},L5:function(){return he},oI:function(){return be},sY:function(){return xe},T5:function(){return Ze},ss:function(){return Se},Uo:function(){return Oe},Gf:function(){return Fe},KQ:function(){return We},Y1:function(){return et},J$:function(){return rt},t5:function(){return dt},Wy:function(){return ft},dU:function(){return yt},NA:function(){return Mt},ZA:function(){return Dt},f_:function(){return Lt},My:function(){return Ut}});var a=n(83117),o=n(67294),r=n(60620),i=n(80102),l=n(3905),s=n(13904),u=["components"],d={},c={toc:[]};function p(e){var t=e.components,n=(0,i.Z)(e,u);return(0,l.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)(s.Z,(0,a.Z)({frontMatter:d},"undefined"!=typeof metadata?{metadata:metadata}:{},{mdxType:"MoodlePageBanner"})),(0,l.kt)("p",null,"JavaScript in Moodle is written in the ESM format, and transpiled into AMD modules for deployment."),(0,l.kt)("p",null,"The ",(0,l.kt)("a",{parentName:"p",href:"../guides/javascript"},"Moodle JavaScript Guide")," has detailed information and examples on writing JavaScript in Moodle. Further information is also available in the ",(0,l.kt)("a",{parentName:"p",href:"https://docs.moodle.org/dev/Javascript_Modules"},"JavaScript Modules")," documentation."),(0,l.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"Although the AMD module format is supported, all new JavaScript is written in the EcmaScript Module (ESM) format."))))}p.isMDXComponent=!0;var m=function(e){return o.createElement(r.nR,(0,a.Z)({required:!0,defaultDescription:p,defaultExample:"\nimport {fetchThings} from './repository';\n\nexport const updateThings = (thingData) => {\n    return fetchThings(thingData);\n};\n",examplePurpose:"Example module",filepath:"/amd/src/example.js",filetype:"js",modulename:"example",summary:"AMD JavaScript Modules"},e))},h=["components"],f={},g={toc:[]};function k(e){var t=e.components,n=(0,i.Z)(e,h);return(0,l.kt)("wrapper",(0,a.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)(s.Z,(0,a.Z)({frontMatter:f},"undefined"!=typeof metadata?{metadata:metadata}:{},{mdxType:"MoodlePageBanner"})),(0,l.kt)("p",null,"If your plugin stores data then you may need to implement the Backup feature which allows the activity to backed up, restored, and duplicated."),(0,l.kt)("p",null,"For more information on Backup and restore, see the following:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://docs.moodle.org/dev/Backup_2.0_for_developers"},"Backup 2.0 for developers")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://docs.moodle.org/dev/Restore_2.0_for_developers"},"Restore 2.0 for developers"))))}k.isMDXComponent=!0;var v=function(e){return o.createElement(r.nR,(0,a.Z)({filepath:"/backup/",summary:"Plugin Backup configuration",defaultDescription:k},e))},b=["components"],y={},N={toc:[]};function w(e){var t=e.components,n=(0,i.Z)(e,b);return(0,l.kt)("wrapper",(0,a.Z)({},N,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)(s.Z,(0,a.Z)({frontMatter:y},"undefined"!=typeof metadata?{metadata:metadata}:{},{mdxType:"MoodlePageBanner"})),(0,l.kt)("p",null,"For plugins which make use of ",(0,l.kt)("a",{parentName:"p",href:"https://docs.moodle.org/dev/CLI_scripts"},"CLI scripts"),", the convention is that these are placed into the ",(0,l.kt)("inlineCode",{parentName:"p"},"cli")," folder to make their purpose clear, and easy to find."),(0,l.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"All CLI scripts ",(0,l.kt)("strong",{parentName:"p"},"must")," declare themselves as being a CLI script by defining the ",(0,l.kt)("inlineCode",{parentName:"p"},"CLI_SCRIPT")," constant to true before including ",(0,l.kt)("inlineCode",{parentName:"p"},"config.php"),"."))))}w.isMDXComponent=!0;var _=function(e){return o.createElement(r.nR,(0,a.Z)({filepath:"/cli/",summary:"CLI scripts",exampleFilepath:"/cli/example.php",examplePurpose:"Example CLI script",defaultDescription:w,defaultExample:"define('CLI_SCRIPT', true);\n\nrequire_once(__DIR__ . '/../../config.php');\nrequire_once(\"{$CFG->libdir}/clilib.php\");\n\n// Your CLI features go here.\n"},e))},x=["components"],M={},T={toc:[]};function C(e){var t=e.components,n=(0,i.Z)(e,x);return(0,l.kt)("wrapper",(0,a.Z)({},T,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)(s.Z,(0,a.Z)({frontMatter:M},"undefined"!=typeof metadata?{metadata:metadata}:{},{mdxType:"MoodlePageBanner"})),(0,l.kt)("p",null,"If your plugin includes a changelog in its root directory, this will be used to automatically pre-fill the release notes field when uploading new versions of your plugin to the ",(0,l.kt)("a",{parentName:"p",href:"https://docs.moodle.org/dev/Plugins_directory"},"Plugins directory"),". This file can be in any of the following locations:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"CHANGES.md"),": as a markdown file; or"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"CHANGES.txt"),": as a text file; or"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"CHANGES.html"),": as an HTML file; or"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"CHANGES"),": as a text file.")))}C.isMDXComponent=!0;var E=function(e){return o.createElement(r.nR,(0,a.Z)({filepath:"/CHANGES",filetype:"php",summary:"Plugin changelog",recommended:!0,defaultDescription:C},e))},Z=["components"],D={},P={toc:[]};function I(e){var t=e.components,n=(0,i.Z)(e,Z);return(0,l.kt)("wrapper",(0,a.Z)({},P,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)(s.Z,(0,a.Z)({frontMatter:D},"undefined"!=typeof metadata?{metadata:metadata}:{},{mdxType:"MoodlePageBanner"})),(0,l.kt)("p",null,"Moodle supports, and recommends, the use of autoloaded PHP classes."),(0,l.kt)("p",null,"By placing files within the ",(0,l.kt)("inlineCode",{parentName:"p"},"classes")," directory or appropriate sub-directories, and with the correct PHP Namespace, and class name, Moodle is able to autoload classes without the need to manually require, or include them."),(0,l.kt)("p",null,"Details on these rules and conventions are available in the following documentation:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/general/development/policies/codingstyle#namespaces"},"Coding style - namespace conventions")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://docs.moodle.org/dev/Automatic_class_loading"},"Automatic class loading"))))}I.isMDXComponent=!0;var A=function(e){return o.createElement(r.nR,(0,a.Z)({filepath:"/classes/",summary:"Autoloaded classes",defaultDescription:I},e))},S=["components"],L={},$={toc:[]};function R(e){var t=e.components,n=(0,i.Z)(e,S);return(0,l.kt)("wrapper",(0,a.Z)({},$,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)(s.Z,(0,a.Z)({frontMatter:L},"undefined"!=typeof metadata?{metadata:metadata}:{},{mdxType:"MoodlePageBanner"})),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"db/access.php")," file contains the ",(0,l.kt)("strong",{parentName:"p"},"initial")," configuration for a plugin's access control rules."),(0,l.kt)("p",null,"Access control is handled in Moodle by the use of Roles, and Capabilities. You can read more about these in the ",(0,l.kt)("a",{parentName:"p",href:"/devdocs/docs/apis/subsystems/access"},"Access API")," documentation."),(0,l.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"Changing initial configuration")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"If you make changes to the initial configuration of ",(0,l.kt)("em",{parentName:"p"},"existing")," access control rules, these will only take effect for ",(0,l.kt)("em",{parentName:"p"},"new installations of your plugin"),". Any existing installation ",(0,l.kt)("strong",{parentName:"p"},"will not")," be updated with the latest configuration."),(0,l.kt)("p",{parentName:"div"},"Updating existing capability configuration for an installed site is not recommended as it may have already been modified by an administrator."))))}R.isMDXComponent=!0;var B=function(e){return o.createElement(r.nR,(0,a.Z)({defaultDescription:R,defaultExample:"$capabilities = [\n    // Ability to use the plugin.\n    'plugintype/pluginname:useplugininstance' => [\n        'riskbitmask' => RISK_XSS,\n        'captype' => 'write',\n        'contextlevel' => CONTEXT_COURSE,\n        'archetypes' => [\n            'manager' => CAP_ALLOW,\n            'editingteacher' => CAP_ALLOW,\n        ],\n    ],\n];\n",filepath:"/db/access.php",summary:"Plugin capabilities",examplePurpose:"Plugin capabilities"},e))},O=["components"],U={},H={toc:[]};function X(e){var t=e.components,n=(0,i.Z)(e,O);return(0,l.kt)("wrapper",(0,a.Z)({},H,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)(s.Z,(0,a.Z)({frontMatter:U},"undefined"!=typeof metadata?{metadata:metadata}:{},{mdxType:"MoodlePageBanner"})),(0,l.kt)("p",null,"Moodle supports a feature known as ",(0,l.kt)("em",{parentName:"p"}," ",(0,l.kt)("a",{parentName:"em",href:"https://docs.moodle.org/dev/Events_API#Event_observers"},"Event observers")," ")," to allow components to make changes when certain events take place."),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"db/events.php")," file allows you define any event subscriptions that your plugin needs to listen for."),(0,l.kt)("p",null,"Event subscriptions are a convenient way to observe events generated elsewhere in Moodle."),(0,l.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"Communication between components")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"You ",(0,l.kt)("em",{parentName:"p"},"should not")," use event subscriptions to subscribe to events belonging to other plugins, without defining a dependency upon that plugin."),(0,l.kt)("p",{parentName:"div"},"See the ",(0,l.kt)("a",{parentName:"p",href:"/general/development/policies/component-communication#event-observers"},"Component communication principles")," documentation for a description of some of the risks of doing so."))))}X.isMDXComponent=!0;var q=function(e){return o.createElement(r.nR,(0,a.Z)({refreshedDuringUpgrade:!0,defaultDescription:X,defaultExample:"$observers = [\n    [\n        'eventname' => '\\core\\event\\course_module_created',\n        'callback'  => '\\plugintype_pluginname\\event\\observer\\course_module_created::store',\n        'priority'  => 1000,\n    ],\n];\n",filepath:"/db/events.php",summary:"Event observer definitions",examplePurpose:"Event observer definitions"},e))},F=["components"],z={},j={toc:[]};function G(e){var t=e.components,n=(0,i.Z)(e,F);return(0,l.kt)("wrapper",(0,a.Z)({},j,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)(s.Z,(0,a.Z)({frontMatter:z},"undefined"!=typeof metadata?{metadata:metadata}:{},{mdxType:"MoodlePageBanner"})),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"db/install.php")," file allows you define a post-installation hook, which is called immediately after the initial creation of your database schema."),(0,l.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"This file is not used at all after the ",(0,l.kt)("em",{parentName:"p"},"initial")," installation of your plugin."),(0,l.kt)("p",{parentName:"div"},"It is ",(0,l.kt)("em",{parentName:"p"},"not called")," during any upgrade."))))}G.isMDXComponent=!0;var Y=function(e){return o.createElement(r.nR,(0,a.Z)({defaultDescription:G,filepath:"/CHANGES",filetype:"php",summary:"Post-installation hook"},e))},W=["components"],V={},J={toc:[]};function K(e){var t=e.components,n=(0,i.Z)(e,W);return(0,l.kt)("wrapper",(0,a.Z)({},J,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)(s.Z,(0,a.Z)({frontMatter:V},"undefined"!=typeof metadata?{metadata:metadata}:{},{mdxType:"MoodlePageBanner"})),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"install.xml")," file is used to define any database tables, fields, indexes, and keys, which should be created for a plugin during its initial installation."),(0,l.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"When creating or updating the ",(0,l.kt)("inlineCode",{parentName:"p"},"install.xml")," you ",(0,l.kt)("strong",{parentName:"p"},"must")," use the built-in ",(0,l.kt)("a",{parentName:"p",href:"https://docs.moodle.org/dev/XMLDB_Documentation"},"XMLDB editor")," within Moodle."))))}K.isMDXComponent=!0;var Q=function(e){return o.createElement(r.nR,(0,a.Z)({filepath:"/db/install.xml",summary:"Database schema",examplePurpose:"Database schema",defaultDescription:K},e))},ee=["components"],te={},ne={toc:[]};function ae(e){var t=e.components,n=(0,i.Z)(e,ee);return(0,l.kt)("wrapper",(0,a.Z)({},ne,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)(s.Z,(0,a.Z)({frontMatter:te},"undefined"!=typeof metadata?{metadata:metadata}:{},{mdxType:"MoodlePageBanner"})),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"db/messages.php")," file allows you to declare the messages that your plugin sends."),(0,l.kt)("p",null,"See the ",(0,l.kt)("a",{parentName:"p",href:"https://docs.moodle.org/dev/Message_API"},"Message API")," documentation for further information."))}ae.isMDXComponent=!0;var oe=function(e){return o.createElement(r.nR,(0,a.Z)({refreshedDuringUpgrade:!0,defaultExample:"\n$messageproviders = [\n    'things' => [\n        'defaults' => [\n            'airnotifier' => MESSAGE_PERMITTED + MESSAGE_DEFAULT_ENABLED,\n        ],\n    ],\n];\n",defaultDescription:ae,filepath:"/db/messages.php",summary:"Message provider configuration",examplePurpose:"Message provider configuration"},e))},re=["components"],ie={},le={toc:[]};function se(e){var t=e.components,n=(0,i.Z)(e,re);return(0,l.kt)("wrapper",(0,a.Z)({},le,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)(s.Z,(0,a.Z)({frontMatter:ie},"undefined"!=typeof metadata?{metadata:metadata}:{},{mdxType:"MoodlePageBanner"})),(0,l.kt)("p",null,"The Moodle Mobile remote add-on is the mobile app version of the plugin that will be loaded when a user accesses the plugin on the app."),(0,l.kt)("p",null,"A plugin can include several Mobile add-ons. Each add-on must indicate a unique name."),(0,l.kt)("p",null,"See the ",(0,l.kt)("a",{parentName:"p",href:"../../moodleapp/development/plugins-development-guide"},"Moodle App Plugins development guide")," for more information on configuring your plugin for the Moodle App."))}se.isMDXComponent=!0;var ue=function(e){return o.createElement(r.nR,(0,a.Z)({refreshedDuringUpgrade:!0,defaultDescription:se,filepath:"/db/mobile.php",summary:"MoodleMobile version of the plugin"},e))},de=["components"],ce={},pe={toc:[]};function me(e){var t=e.components,n=(0,i.Z)(e,de);return(0,l.kt)("wrapper",(0,a.Z)({},pe,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)(s.Z,(0,a.Z)({frontMatter:ce},"undefined"!=typeof metadata?{metadata:metadata}:{},{mdxType:"MoodlePageBanner"})),(0,l.kt)("p",null,"Details of classes that have been renamed to fit in with autoloading. See ",(0,l.kt)("a",{parentName:"p",href:"https://moodle.org/mod/forum/discuss.php?d=262403"},"forum discussion")," for details."))}me.isMDXComponent=!0;var he=function(e){return o.createElement(r.nR,(0,a.Z)({refreshedDuringPurge:!0,defaultExample:"\ndefined('MOODLE_INTERNAL') || die;\n\n$renamedclasses = [\n    'old_class_name' => 'fully_qualified\\\\new\\\\name',\n\n    // Examples:\n    'assign_header' => 'mod_assign\\\\output\\\\header',\n    '\\assign_header' => 'mod_assign\\\\output\\\\header',\n    '\\assign' => 'mod_assign\\\\assignment',\n\n    // Incorrect:\n    // The new class name should _not_ have a leading \\.\n    'assign_header' => '\\\\mod_assign\\\\output\\\\header',\n];\n",defaultDescription:me,filepath:"/db/renamedclasses.php",summary:"Renamed classes",examplePurpose:"Renamed classes"},e))},fe=["components"],ge={},ke={toc:[]};function ve(e){var t=e.components,n=(0,i.Z)(e,fe);return(0,l.kt)("wrapper",(0,a.Z)({},ke,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)(s.Z,(0,a.Z)({frontMatter:ge},"undefined"!=typeof metadata?{metadata:metadata}:{},{mdxType:"MoodlePageBanner"})),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"db/services.php")," file is used to describe the external functions available for use in web services. This includes"),(0,l.kt)("p",null,"web service functions defined for JavaScript, and for the ",(0,l.kt)("a",{parentName:"p",href:"/devdocs/docs/moodleapp"},"Moodle Mobile App"),"."),(0,l.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"Web services should be named following the ",(0,l.kt)("a",{parentName:"p",href:"https://docs.moodle.org/dev/Web_service_API_functions#Naming_convention"},"naming convention for web services"),"."))),(0,l.kt)("p",null,"For further information on external functions and web services, see:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://docs.moodle.org/dev/Adding_a_web_service_to_a_plugin"},"Adding a web service to a plugin")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://docs.moodle.org/dev/Web_services_API"},"Web services API")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://docs.moodle.org/dev/External_functions_API"},"External functions API"))))}ve.isMDXComponent=!0;var be=function(e){return o.createElement(r.nR,(0,a.Z)({refreshedDuringUpgrade:!0,recommended:!0,filepath:"/db/services.php",summary:"Web service function declarations",examplePurpose:"Web service function declarations",defaultExample:"\n$functions = [\n    'plugintype_pluginname_create_things' => [\n        'classname' => 'plugintype_pluginname\\external\\create_things',\n        'methodname' => 'execute',\n        'description' => 'Create a new thing',\n        'type' => 'write',\n        'capabilities' => 'plugintype/pluginname:create_things',\n        'ajax' => true,\n        'services' => [\n            MOODLE_OFFICIAL_MOBILE_SERVICE,\n        ],\n    ],\n];\n",defaultDescription:ve},e))},ye=["components"],Ne={},we={toc:[]};function _e(e){var t=e.components,n=(0,i.Z)(e,ye);return(0,l.kt)("wrapper",(0,a.Z)({},we,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)(s.Z,(0,a.Z)({frontMatter:Ne},"undefined"!=typeof metadata?{metadata:metadata}:{},{mdxType:"MoodlePageBanner"})),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"db/uninstall.php")," file allows you define a pre-uninstallation hook, which is called immediately before all table and data from your plugin are removed."))}_e.isMDXComponent=!0;var xe=function(e){return o.createElement(r.nR,(0,a.Z)({defaultDescription:_e,filepath:"/db/uninstall.php",filetype:"php",summary:"Pre-uninstallation hook"},e))},Me=["components"],Te={},Ce={toc:[]};function Ee(e){var t=e.components,n=(0,i.Z)(e,Me);return(0,l.kt)("wrapper",(0,a.Z)({},Ce,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)(s.Z,(0,a.Z)({frontMatter:Te},"undefined"!=typeof metadata?{metadata:metadata}:{},{mdxType:"MoodlePageBanner"})),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"db/upgrade.php")," file contains upgrade steps, including database schema changes, changes to settings, and other steps which must be performed during upgrade."),(0,l.kt)("p",null,"See the ",(0,l.kt)("a",{parentName:"p",href:"https://docs.moodle.org/dev/Upgrade_API"},"Upgrade API")," documentation for further information."),(0,l.kt)("div",{className:"admonition admonition-danger alert alert--danger"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"Generating Database Schema changes")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"When making changes to the database schema you ",(0,l.kt)("strong",{parentName:"p"},"must")," use the build-in ",(0,l.kt)("a",{parentName:"p",href:"https://docs.moodle.org/dev/XMLDB_Documentation"},"XMLDB editor")," within\nMoodle. This can be used to generate php upgrade steps."),(0,l.kt)("p",{parentName:"div"},"The ",(0,l.kt)("a",{parentName:"p",href:"#dbinstallxml"},"install.xml")," schema must match the schema generated by the upgrade at all times."))),(0,l.kt)("p",null,"To create an upgrade step you must:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Use the ",(0,l.kt)("a",{parentName:"li",href:"https://docs.moodle.org/dev/XMLDB_editor"},"XMLDB editor")," to create the definition of the new fields"),(0,l.kt)("li",{parentName:"ol"},"Update the ",(0,l.kt)("inlineCode",{parentName:"li"},"install.xml")," from the XMLDB editor"),(0,l.kt)("li",{parentName:"ol"},"Generate the PHP upgrade steps from within the XMLDB Editor"),(0,l.kt)("li",{parentName:"ol"},"Update the version number in your ",(0,l.kt)("inlineCode",{parentName:"li"},"version.php"))),(0,l.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"In many cases you will be able to combine multiple upgrade steps into a single version change."))),(0,l.kt)("p",null,"When a version number increment is detected during an upgrade, the ",(0,l.kt)("inlineCode",{parentName:"p"},"xmldb_[pluginname]_upgrade")," function is called with the old version number as the first argument."),(0,l.kt)("p",null,"See the ",(0,l.kt)("a",{parentName:"p",href:"https://docs.moodle.org/dev/Upgrade_API"},"Upgrade API")," documentation for more information on the upgrade process."))}Ee.isMDXComponent=!0;var Ze=function(e){return o.createElement(r.nR,(0,a.Z)({recommended:!0,defaultDescription:Ee,defaultExample:"\nfunction xmldb_certificate_upgrade($oldversion = 0) {\n    if ($oldversion < 2012091800) {\n        // Add new fields to certificate table.\n        $table = new xmldb_table('certificate');\n        $field = new xmldb_field('showcode');\n        $field->set_attributes(XMLDB_TYPE_INTEGER, '1', XMLDB_UNSIGNED, XMLDB_NOTNULL, null, '0', 'savecert');\n        if (!$dbman->field_exists($table, $field)) {\n            $dbman->add_field($table, $field);\n        }\n        // Add new fields to certificate_issues table.\n        $table = new xmldb_table('certificate_issues');\n        $field = new xmldb_field('code');\n        $field->set_attributes(XMLDB_TYPE_CHAR, '50', null, null, null, null, 'certificateid');\n        if (!$dbman->field_exists($table, $field)) {\n            $dbman->add_field($table, $field);\n        }\n\n        // Certificate savepoint reached.\n        upgrade_mod_savepoint(true, 2012091800, 'certificate');\n    }\n}",filepath:"/db/upgrade.php",summary:"Upgrade steps",examplePurpose:"Upgrade steps"},e))},De=["components"],Pe={},Ie={toc:[]};function Ae(e){var t=e.components,n=(0,i.Z)(e,De);return(0,l.kt)("wrapper",(0,a.Z)({},Ie,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)(s.Z,(0,a.Z)({frontMatter:Pe},"undefined"!=typeof metadata?{metadata:metadata}:{},{mdxType:"MoodlePageBanner"})),(0,l.kt)("p",null,"A plugin can declare its own environment requirements, in addition to those declared by Moodle core. These may includes features such as PHP extension requirements, version requirements, and similar items."),(0,l.kt)("p",null,"Further information on this file and its format can be found in the ",(0,l.kt)("a",{parentName:"p",href:"https://docs.moodle.org/dev/Environment_checking"},"Environment checking")," documentation."))}Ae.isMDXComponent=!0;var Se=function(e){return o.createElement(r.nR,(0,a.Z)({showFileHeader:!1,showLicense:!1,refreshedDuringUpgrade:!0,filepath:"/environment.xml",filetype:"xml",summary:"Plugin-specific environment requirements",defaultDescription:Ae,defaultExample:'\n<?xml version="1.0" encoding="UTF-8" ?>\n<COMPATIBILITY_MATRIX>\n  <PLUGIN name="plugintype_pluginname">\n    <PHP_EXTENSIONS>\n      <PHP_EXTENSION name="soap" level="required">\n      </PHP_EXTENSION>\n    </PHP_EXTENSIONS>\n  </PLUGIN>\n</COMPATIBILITY_MATRIX>'},e))},Le=["components"],$e={},Re={toc:[]};function Be(e){var t=e.components,n=(0,i.Z)(e,Le);return(0,l.kt)("wrapper",(0,a.Z)({},Re,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)(s.Z,(0,a.Z)({frontMatter:$e},"undefined"!=typeof metadata?{metadata:metadata}:{},{mdxType:"MoodlePageBanner"})),(0,l.kt)("p",null,"Each plugin must define a set of language strings with, at a minimum, an English translation. These are specified in the plugin's ",(0,l.kt)("inlineCode",{parentName:"p"},"lang/en")," directory in a file named after the plugin. For example the LDAP authentication plugin:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},"// Plugin type: `auth`\n// Plugin name: `ldap`\n// Frankenstyle plugin name: `auth_ldap`\n// Plugin location: `auth/ldap`\n// Language string location: `auth/ldap/lang/en/auth_ldap.php`\n")),(0,l.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"Every plugin ",(0,l.kt)("em",{parentName:"p"},"must")," define the name of the plugin, or its ",(0,l.kt)("inlineCode",{parentName:"p"},"pluginname"),"."))),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"get_string")," API can be used to translate a string identifier back into a translated string."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"get_string('pluginname', '[plugintype]_[pluginname]');\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"See the ",(0,l.kt)("a",{parentName:"li",href:"https://docs.moodle.org/dev/String_API#Adding_language_file_to_plugin"},"String API")," documentation for more information on language files.")))}Be.isMDXComponent=!0;var Oe=function(e){return o.createElement(r.nR,(0,a.Z)({filepath:"/lang/en/plugintype_pluginname.php",refreshedDuringPurge:!0,required:!0,summary:"Language files",examplePurpose:"Languages configuration",defaultDescription:Be,defaultExample:"$string['pluginname'] = 'The name of my plugin will go here';"},e))},Ue=["components"],He={},Xe={toc:[]};function qe(e){var t=e.components,n=(0,i.Z)(e,Ue);return(0,l.kt)("wrapper",(0,a.Z)({},Xe,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)(s.Z,(0,a.Z)({frontMatter:He},"undefined"!=typeof metadata?{metadata:metadata}:{},{mdxType:"MoodlePageBanner"})),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"lib.php")," file is a legacy file which acts as a bridge between Moodle core, and the plugin. In recent plugins it is should only used to define callbacks and related functionality which currently is not supported as an auto-loadable class."),(0,l.kt)("p",null,"All functions defined in this file ",(0,l.kt)("strong",{parentName:"p"},"must")," meet the requirements set out in the relevant section of the ",(0,l.kt)("a",{parentName:"p",href:"/general/development/policies/codingstyle#Functions-and-Methods"},"Coding style"),"."),(0,l.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Performance impact")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"Moodle core often loads all the ",(0,l.kt)("tt",null,"lib.php")," files of a given plugin types. For performance reasons, it is strongly recommended to keep this file as small as possible and have just required code implemented in it. All the plugin's internal logic should be implemented in the auto-loaded classes."))))}qe.isMDXComponent=!0;var Fe=function(e){return o.createElement(r.nR,(0,a.Z)({legacy:!0,required:!1,filepath:"/lib.php",summary:"Global plugin functions",examplePurpose:"Plugin functions",defaultDescription:qe},e))},ze=["components"],je={},Ge={toc:[]};function Ye(e){var t=e.components,n=(0,i.Z)(e,ze);return(0,l.kt)("wrapper",(0,a.Z)({},Ge,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)(s.Z,(0,a.Z)({frontMatter:je},"undefined"!=typeof metadata?{metadata:metadata}:{},{mdxType:"MoodlePageBanner"})),(0,l.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"Legacy feature")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"The use of this file is no longer recommended, and new uses of it will not be permitted in core code."))),(0,l.kt)("p",null,"Rather than creating global functions in a global namespace in a ",(0,l.kt)("tt",null,"locallib.php")," file, you should use autoloaded classes which are located in the ",(0,l.kt)("tt",null,"classes/")," directory."),(0,l.kt)("p",null,"Where this file is in use, all functions ",(0,l.kt)("strong",{parentName:"p"},"must")," meet the requirements set out in the relevant section of the ",(0,l.kt)("a",{parentName:"p",href:"/general/development/policies/codingstyle#Functions-and-Methods"},"Coding style")),(0,l.kt)("p",null,"Existing functions which have been incorrectly named ",(0,l.kt)("strong",{parentName:"p"},"will not")," be accepted as an example of an existing convention. Existing functions which are incorrectly named ",(0,l.kt)("strong",{parentName:"p"},"should")," be converted to use a namespaced class."))}Ye.isMDXComponent=!0;var We=function(e){return o.createElement(r.nR,(0,a.Z)({defaultDescription:Ye,filepath:"/locallib.php",legacy:!0,required:!1,summary:"Global support functions"},e))},Ve=["components"],Je={},Ke={toc:[]};function Qe(e){var t=e.components,n=(0,i.Z)(e,Ve);return(0,l.kt)("wrapper",(0,a.Z)({},Ke,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)(s.Z,(0,a.Z)({frontMatter:Je},"undefined"!=typeof metadata?{metadata:metadata}:{},{mdxType:"MoodlePageBanner"})),(0,l.kt)("p",null,"Plugins can provide icons in several formats, and most plugin types require that a default icon be provided."),(0,l.kt)("p",null,"Where a browser supports it, the ",(0,l.kt)("inlineCode",{parentName:"p"},"svg")," format is used, falling back to ",(0,l.kt)("inlineCode",{parentName:"p"},"png")," formats when an SVG is unavailable."),(0,l.kt)("p",null,"Full details of the correct naming, sizing, and design guidelines for icons in Moodle can be found in the ",(0,l.kt)("a",{parentName:"p",href:"https://docs.moodle.org/dev/Moodle_icons"},"Moodle icons")," documentation."))}Qe.isMDXComponent=!0;var et=function(e){return o.createElement(r.nR,(0,a.Z)({defaultDescription:Qe,refreshedDuringPurge:!0,filepath:"/pix/",summary:"Plugins icons"},e))},tt=["components"],nt={},at={toc:[]};function ot(e){var t=e.components,n=(0,i.Z)(e,tt);return(0,l.kt)("wrapper",(0,a.Z)({},at,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)(s.Z,(0,a.Z)({frontMatter:nt},"undefined"!=typeof metadata?{metadata:metadata}:{},{mdxType:"MoodlePageBanner"})),(0,l.kt)("p",null,"We recommend that you include any additional information for your plugin in a project readme file. Ideally this should act as an offline version of all information in your plugin's page in the ",(0,l.kt)("a",{parentName:"p",href:"https://docs.moodle.org/dev/Plugins_directory"},"Plugins directory"),"."),(0,l.kt)("p",null,"We recommend creating your readme file in either a ",(0,l.kt)("inlineCode",{parentName:"p"},"README.md"),", or ",(0,l.kt)("inlineCode",{parentName:"p"},"README.txt")," format."))}ot.isMDXComponent=!0;var rt=function(e){return o.createElement(r.nR,(0,a.Z)({filepath:"/README",recommended:!0,defaultDescription:ot,summary:"Plugin Information for Administrators"},e))},it=["components"],lt={},st={toc:[]};function ut(e){var t=e.components,n=(0,i.Z)(e,it);return(0,l.kt)("wrapper",(0,a.Z)({},st,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)(s.Z,(0,a.Z)({frontMatter:lt},"undefined"!=typeof metadata?{metadata:metadata}:{},{mdxType:"MoodlePageBanner"})),(0,l.kt)("p",null,"When importing a third-party library into your plugin, it is advisable to create a ",(0,l.kt)("inlineCode",{parentName:"p"},"readme_moodle.txt")," file detailing relevant information, including:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Download URLs"),(0,l.kt)("li",{parentName:"ul"},"Build instructions")))}ut.isMDXComponent=!0;var dt=function(e){return o.createElement(r.nR,(0,a.Z)({recommended:!0,filepath:"/*/readme_moodle.txt",defaultDescription:ut,summary:"Third-party library import instructions"},e))},ct=["components"],pt={},mt={toc:[]};function ht(e){var t=e.components,n=(0,i.Z)(e,ct);return(0,l.kt)("wrapper",(0,a.Z)({},mt,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)(s.Z,(0,a.Z)({frontMatter:pt},"undefined"!=typeof metadata?{metadata:metadata}:{},{mdxType:"MoodlePageBanner"})),(0,l.kt)("p",null,"You can define settings for your plugin that the administrator can configure by creating a ",(0,l.kt)("inlineCode",{parentName:"p"},"settings.php")," file in the root of your plugins' directory."),(0,l.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"Settings must named in the following format:"),(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre"},"plugintype_pluginname/settingname\n")),(0,l.kt)("p",{parentName:"div"},"By following the correct naming, all settings will automatically be stored in the ",(0,l.kt)("inlineCode",{parentName:"p"},"config_plugins")," database table."))),(0,l.kt)("p",null,"Full details on how to create settings are available in the ",(0,l.kt)("a",{parentName:"p",href:"https://docs.moodle.org/dev/Admin_settings"},"Admin settings")," documentation."))}ht.isMDXComponent=!0;var ft=function(e){return o.createElement(r.nR,(0,a.Z)({defaultDescription:ht,filepath:"/settings.php",summary:"Plugin settings",examplePurpose:"Plugin settings"},e))},gt=["components"],kt={},vt={toc:[]};function bt(e){var t=e.components,n=(0,i.Z)(e,gt);return(0,l.kt)("wrapper",(0,a.Z)({},vt,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)(s.Z,(0,a.Z)({frontMatter:kt},"undefined"!=typeof metadata?{metadata:metadata}:{},{mdxType:"MoodlePageBanner"})),(0,l.kt)("p",null,"Plugins may define a '/styles.css' to provide plugin-specific styling. See the following for further documentation:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://docs.moodle.org/dev/Plugin_contribution_checklist#CSS_styles"},"Plugin contribution checklist#CSS styles")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://docs.moodle.org/dev/CSS_Coding_Style"},"CSS Coding Style"))),(0,l.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Avoid custom styles where possible")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"Rather than writing custom CSS for your plugin, where possible apply Bootstrap classes to the DOM elements in your output. These will be easier to maintain and will adopt most colour, branding, and other customisations applied to a theme."))))}bt.isMDXComponent=!0;var yt=function(e){return o.createElement(r.nR,(0,a.Z)({refreshedDuringPurge:!0,defaultDescription:bt,filepath:"/styles.css",summary:"CSS style sheet for your plugin"},e))},Nt=["components"],wt={},_t={toc:[]};function xt(e){var t=e.components,n=(0,i.Z)(e,Nt);return(0,l.kt)("wrapper",(0,a.Z)({},_t,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)(s.Z,(0,a.Z)({frontMatter:wt},"undefined"!=typeof metadata?{metadata:metadata}:{},{mdxType:"MoodlePageBanner"})),(0,l.kt)("p",null,"Details of all third-party libraries should be declared in the ",(0,l.kt)("inlineCode",{parentName:"p"},"thirdpartylibs.xml")," file."),(0,l.kt)("p",null,"This information is used to generate ignore file configuration for linting tools. For Moodle core it is also used to generate library information as part of release notes and credits."),(0,l.kt)("p",null,"Within the XML the ",(0,l.kt)("inlineCode",{parentName:"p"},"location")," is a file, or directory, relative to your plugin's root."),(0,l.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"Licensing")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"The license of any third-party code included in your plugin, and within the ",(0,l.kt)("inlineCode",{parentName:"p"},"thirdpartylibs.xml")," file ",(0,l.kt)("strong",{parentName:"p"},"must")," be ",(0,l.kt)("a",{parentName:"p",href:"http://www.gnu.org/licenses/license-list.html#GPLCompatibleLicenses"},"compatible with the GNU GPLv3"),"."))),(0,l.kt)("p",null,"See the ",(0,l.kt)("a",{parentName:"p",href:"https://docs.moodle.org/dev/Third_Party_Libraries"},"Third Party Libraries")," documentation for further information."))}xt.isMDXComponent=!0;var Mt=function(e){return o.createElement(r.nR,(0,a.Z)({defaultDescription:xt,defaultExample:'<?xml version="1.0"?>\n<libraries>\n    <library>\n        <location>javascript/html5shiv.js</location>\n        <name>Html5Shiv</name>\n        <version>3.6.2</version>\n        <license>Apache</license>\n        <licenseversion>2.0</licenseversion>\n    </library>\n    <library>\n        <location>vendor/guzzle/guzzle/</location>\n        <name>guzzle</name>\n        <version>v3.9.3</version>\n        <license>MIT</license>\n        <licenseversion></licenseversion>\n    </library>\n</libraries>',filepath:"/thirdpartylibs.xml",filetype:"xml",summary:"Details of third-party libraries includedin the plugin",showLicense:!1,showFileHeader:!1},e))},Tt=["components"],Ct={},Et={toc:[]};function Zt(e){var t=e.components,n=(0,i.Z)(e,Tt);return(0,l.kt)("wrapper",(0,a.Z)({},Et,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)(s.Z,(0,a.Z)({frontMatter:Ct},"undefined"!=typeof metadata?{metadata:metadata}:{},{mdxType:"MoodlePageBanner"})),(0,l.kt)("p",null,"Each component and subsystem may make use of an ",(0,l.kt)("inlineCode",{parentName:"p"},"upgrade.txt")," file in the top level folder. A title is used to identify the Moodle version where the change was introduced, and significant changes for that version relating to that component or subsystem are displayed."),(0,l.kt)("p",null,"When changes are integrated to multiple branches, for example a stable version and the master branch, then the relevant versions used to describe the change in the ",(0,l.kt)("inlineCode",{parentName:"p"},"upgrade.txt")," file should be the next version to be released ",(0,l.kt)("em",{parentName:"p"},"for each branch"),". The ",(0,l.kt)("inlineCode",{parentName:"p"},"master")," branch should always use the next major version."),(0,l.kt)("p",null,"For example if a change is applied to the ",(0,l.kt)("strong",{parentName:"p"},"MOODLE_400_STABLE")," during the development of Moodle 4.0.2, and the ",(0,l.kt)("strong",{parentName:"p"},"master")," branch during the development of Moodle 4.1, then the relevant versions will be ",(0,l.kt)("strong",{parentName:"p"},"4.0.2")," and ",(0,l.kt)("strong",{parentName:"p"},"4.1"),"."),(0,l.kt)("p",null,"If a change is only applied to the master branch then only the ",(0,l.kt)("strong",{parentName:"p"},"4.1")," version will be listed."),(0,l.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Exception during parallel development")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"When Moodle is developing two major versions in parallel, for example Moodle 3.11.0, and Moodle 4.0.0, then the\nversion in the earliest of the major version development branches will be used for both branches."),(0,l.kt)("p",{parentName:"div"},"For example, during the development of Moodle 3.11, and Moodle 4.0, which took place in parallel, if a change was integrated to 3.11 and 4.0, then the version specified in both branches would be 3.11."))))}Zt.isMDXComponent=!0;var Dt=function(e){return o.createElement(r.nR,(0,a.Z)({recommended:!0,filepath:"/*/upgrade.txt",defaultDescription:Zt,summary:"Significant changes for each version of your plugin"},e))},Pt=["components"],It={},At={toc:[]};function St(e){var t=e.components,n=(0,i.Z)(e,Pt);return(0,l.kt)("wrapper",(0,a.Z)({},At,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)(s.Z,(0,a.Z)({frontMatter:It},"undefined"!=typeof metadata?{metadata:metadata}:{},{mdxType:"MoodlePageBanner"})),(0,l.kt)("p",null,"The version.php contains metadata about the plugin."),(0,l.kt)("p",null,"It is used during the installation and upgrade of the plugin."),(0,l.kt)("p",null,"This file contains metadata used to describe the plugin, and includes information such as:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"the version number"),(0,l.kt)("li",{parentName:"ul"},"a list of dependencies"),(0,l.kt)("li",{parentName:"ul"},"the minimum Moodle version required"),(0,l.kt)("li",{parentName:"ul"},"maturity of the plugin")))}St.isMDXComponent=!0;function Lt(e){return o.createElement(r.nR,(0,a.Z)({required:!0,filepath:"/version.php",filetype:"php",summary:"Version metadata",examplePurpose:"Version metadata",defaultDescription:St,defaultExample:"defined('MOODLE_INTERNAL') || die();\n\n$plugin->version = TODO;\n$plugin->requires = TODO;\n$plugin->supported = TODO;   // Available as of Moodle 3.9.0 or later.\n$plugin->incompatible = TODO;   // Available as of Moodle 3.9.0 or later.\n$plugin->component = 'TODO_FRANKENSTYLE';\n$plugin->maturity = MATURITY_STABLE;\n$plugin->release = 'TODO';\n\n$plugin->dependencies = [\n    'mod_forum' => 2022042100,\n    'mod_data' => 2022042100\n];\n"},e))}var $t=["components"],Rt={},Bt={toc:[]};function Ot(e){var t=e.components,n=(0,i.Z)(e,$t);return(0,l.kt)("wrapper",(0,a.Z)({},Bt,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)(s.Z,(0,a.Z)({frontMatter:Rt},"undefined"!=typeof metadata?{metadata:metadata}:{},{mdxType:"MoodlePageBanner"})),(0,l.kt)("p",null,"In older versions of Moodle, JavaScript was written in the YUI format. This is being phased out in favour of ",(0,l.kt)("a",{parentName:"p",href:"https://docs.moodle.org/dev/Javascript_Modules"},"JavaScript Modules"),", although some older uses still remain in Moodle core."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://docs.moodle.org/dev/YUI/Modules"},"YUI/Modules")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://docs.moodle.org/dev/YUI"},"YUI"))),(0,l.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"New YUI code will not be accepted into Moodle core, except for new plugins for the ",(0,l.kt)("a",{parentName:"p",href:"https://docs.moodle.org/dev/Atto"},"Atto editor"),"."))))}Ot.isMDXComponent=!0;var Ut=function(e){return o.createElement(r.nR,(0,a.Z)({legacy:!0,refreshedDuringPurge:!0,defaultDescription:Ot,filepath:"/yui/",examplePurpose:"YUI JavaScript Modules",summary:"YUI JavaScript Modules"},e))}},85162:function(e,t,n){"use strict";n.d(t,{Z:function(){return i}});var a=n(67294),o=n(86010),r="tabItem_Ymn6";function i(e){var t=e.children,n=e.hidden,i=e.className;return a.createElement("div",{role:"tabpanel",className:(0,o.Z)(r,i),hidden:n},t)}},65488:function(e,t,n){"use strict";n.d(t,{Z:function(){return m}});var a=n(83117),o=n(67294),r=n(86010),i=n(72389),l=n(67392),s=n(7094),u=n(12466),d="tabList__CuJ",c="tabItem_LNqP";function p(e){var t,n,i=e.lazy,p=e.block,m=e.defaultValue,h=e.values,f=e.groupId,g=e.className,k=o.Children.map(e.children,(function(e){if((0,o.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),v=null!=h?h:k.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),b=(0,l.l)(v,(function(e,t){return e.value===t.value}));if(b.length>0)throw new Error('Docusaurus error: Duplicate values "'+b.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var y=null===m?m:null!=(t=null!=m?m:null==(n=k.find((function(e){return e.props.default})))?void 0:n.props.value)?t:k[0].props.value;if(null!==y&&!v.some((function(e){return e.value===y})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+y+'" but none of its children has the corresponding value. Available values are: '+v.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var N=(0,s.U)(),w=N.tabGroupChoices,_=N.setTabGroupChoices,x=(0,o.useState)(y),M=x[0],T=x[1],C=[],E=(0,u.o5)().blockElementScrollPositionUntilNextRender;if(null!=f){var Z=w[f];null!=Z&&Z!==M&&v.some((function(e){return e.value===Z}))&&T(Z)}var D=function(e){var t=e.currentTarget,n=C.indexOf(t),a=v[n].value;a!==M&&(E(t),T(a),null!=f&&_(f,String(a)))},P=function(e){var t,n=null;switch(e.key){case"ArrowRight":var a,o=C.indexOf(e.currentTarget)+1;n=null!=(a=C[o])?a:C[0];break;case"ArrowLeft":var r,i=C.indexOf(e.currentTarget)-1;n=null!=(r=C[i])?r:C[C.length-1]}null==(t=n)||t.focus()};return o.createElement("div",{className:(0,r.Z)("tabs-container",d)},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":p},g)},v.map((function(e){var t=e.value,n=e.label,i=e.attributes;return o.createElement("li",(0,a.Z)({role:"tab",tabIndex:M===t?0:-1,"aria-selected":M===t,key:t,ref:function(e){return C.push(e)},onKeyDown:P,onFocus:D,onClick:D},i,{className:(0,r.Z)("tabs__item",c,null==i?void 0:i.className,{"tabs__item--active":M===t})}),null!=n?n:t)}))),i?(0,o.cloneElement)(k.filter((function(e){return e.props.value===M}))[0],{className:"margin-top--md"}):o.createElement("div",{className:"margin-top--md"},k.map((function(e,t){return(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==M})}))))}function m(e){var t=(0,i.Z)();return o.createElement(p,(0,a.Z)({key:String(t)},e))}},32798:function(e){e.exports={siteHome:"https://moodle.academy/",courses:{setup:{id:29,name:"Set up your Moodle Development Environment",summary:"Learn about the Moodle developer community and setting up a development environment",description:"This course is designed for PHP developers who want to start developing Moodle plugins. You will learn about the Moodle developer community and set up a Moodle development environment. This is the first course in the Developer Pathway. Subsequent courses in the the Developer Pathway will build on the knowledge gained in this course.",tags:["development","basics","setup"],archived:!1,series:[]},securityEssentials:{id:53,name:"Moodle Access and Security Essentials",summary:"A short course looking at access control and security aspects of plugins.",description:"In this course we look at access control and security aspects of a plugin. Through a set of tutorials, you will learn how to control access to your plugin using Moodle's Access API. You will learn how to define capabilities in your plugin and how to determine if the user has the permission to access a page. This course also covers common security threats that developers need to be aware of.\n\nThis is the fourth course in the Moodle Developer Basics program.",tags:["development","basic","essentials","security","api"],archived:!1,series:["basics"]},outputEssentials:{id:49,name:"Web Output Essentials",summary:"Learn how to use Moodle's Page and Output APIs to display content in a local plugin.",description:"This course builds on the knowledge gained in the Moodle development environment course. In this course, we learn how to use Moodle's Page and Output APIs to display content in a local plugin. An introduction to localisation using language strings is also covered in this course. This is the second course in the Moodle developer pathway.",tags:["development","basics","essentials","output","api"],archived:!1,series:["basics"]},architecture:{id:51,name:"Moodle's Modular Architecture and APIs",summary:"Take a deeper look at Moodle's architecture, exploring common APIs including Navigations, Forms, Database, Upgrade, Strings, and Output.",description:"In this course we take a deeper look at Moodle's modular architecture and explore the use of common Moodle APIs. Some of the APIs covered in this course include: Navigation, Forms, Database access, Upgrade, Strings and Output APIs. Learners get hands-on practise on using these APIs in the form of developing a local plugin.\n\nThis is the third course in the Moodle Developer Basics program.",tags:["development","api","architecture"],archived:!1,series:["basics"]},pluginBasics:{id:10,name:"Moodle Plugin Development Basics",summary:"Learn about the essential concepts in Moodle's moduel architecture.",description:"This course teaches you essential concepts related to Moodle's modular architecture, enabling you to develop a simple demo plugin.\n\nPlease note, this course is being migrated to form a new program of short courses on Moodle Academy (called 'Moodle Developer Basics'), which will all be available at the end of April 2022. For now you may still complete the course on Learn Moodle, or you might like to start the Moodle Academy developer short courses that are being released over the coming weeks and will form this new beginner level program.",tags:["development","basics","essentials","api","plugins","architecture"],archived:!1,series:["basics"]}}}},50793:function(e,t,n){"use strict";n.d(t,{dn:function(){return M.Z},vL:function(){return x},U6:function(){return N},E2:function(){return T.Z},mQ:function(){return C.Z},Zh:function(){return _}});n(86134);var a=n(67294),o=n(87918),r=n(80102),i=n(83117),l=n(95408),s=n(98700),u=n(39707),d=n(59766),c=n(69348),p=n(54502),m=n(85893);const h=["component","direction","spacing","divider","children"];function f(e,t){const n=a.Children.toArray(e).filter(Boolean);return n.reduce(((e,o,r)=>(e.push(o),r<n.length-1&&e.push(a.cloneElement(t,{key:`separator-${r}`})),e)),[])}const g=(0,c.ZP)("div",{name:"MuiStack",slot:"Root",overridesResolver:(e,t)=>[t.root]})((({ownerState:e,theme:t})=>{let n=(0,i.Z)({display:"flex"},(0,l.k9)({theme:t},(0,l.P$)({values:e.direction,breakpoints:t.breakpoints.values}),(e=>({flexDirection:e}))));if(e.spacing){const a=(0,s.hB)(t),o=Object.keys(t.breakpoints.values).reduce(((t,n)=>(null==e.spacing[n]&&null==e.direction[n]||(t[n]=!0),t)),{}),r=(0,l.P$)({values:e.direction,base:o}),i=(0,l.P$)({values:e.spacing,base:o}),u=(t,n)=>{return{"& > :not(style) + :not(style)":{margin:0,[`margin${o=n?r[n]:e.direction,{row:"Left","row-reverse":"Right",column:"Top","column-reverse":"Bottom"}[o]}`]:(0,s.NA)(a,t)}};var o};n=(0,d.Z)(n,(0,l.k9)({theme:t},i,u))}return n})),k=a.forwardRef((function(e,t){const n=(0,p.Z)({props:e,name:"MuiStack"}),a=(0,u.Z)(n),{component:o="div",direction:l="column",spacing:s=0,divider:d,children:c}=a,k=(0,r.Z)(a,h),v={direction:l,spacing:s};return(0,m.jsx)(g,(0,i.Z)({as:o,ownerState:v,ref:t},k,{children:d?f(c,d):c}))}));var v=k,b=n(39960);function y(e,t,n){var r=function(e){return"number"==typeof e&&Number.isInteger(e)?e.toFixed(1):e}(t),i=a.createElement("span",null,function(e){if("since"===e)return"Since";if("deprecated"===e)return"Deprecated";throw new Error("Unknown <Since> type: '"+e+"'")}(e)," ",r),l=a.createElement(o.Z,{key:"chip-"+e+r,label:i,clickable:!!n});return n?a.createElement(b.Z,{to:"https://tracker.moodle.org/browse/"+n,key:"link-"+e+r},l):l}function N(e){var t,n,o,r,i,l,s,u,d,c=(n=(t=e).issueNumber,o=void 0===n?null:n,r=t.type,i=void 0===r?"since":r,l=t.versions,s=void 0===l?[]:l,u=t.version,(d=void 0===u?null:u)?y(i,d,o):s.map((function(e){return y(i,e,o)})));return a.createElement(v,{direction:"row",justifyContent:"flex-end",spacing:2},c)}var w=n(86010);function _(e){return a.createElement("div",{className:(0,w.Z)(" alert alert--success margin-bottom--lg ")},a.createElement("span",{className:(0,w.Z)(" badge badge--success ")},"An example of correct behaviour"),e.children)}function x(e){return a.createElement("div",{className:(0,w.Z)(" alert alert--danger margin-bottom--lg ")},a.createElement("span",{className:(0,w.Z)(" badge badge--danger ")},"An example of incorrect behaviour"),e.children)}n(80069);var M=n(46975),T=n(85162),C=n(65488)},86134:function(e,t,n){"use strict";n.d(t,{Z:function(){return d}});var a=n(67294),o=n(69119),r=n(39960),i=n(88698),l=n(32798),s=n.n(l),u=n(80684);function d(e){var t=e.courseName;if(!s().courses[t])throw Error("Unknown course "+t);var n=s().courses[t];return a.createElement(o.Z,{type:"info",icon:a.createElement(i.Z,{fontSize:"inherit"}),title:"Learn more on Moodle Academy"},"You can learn more about"," ",a.createElement("strong",null,e.subject)," ","from the"," ",a.createElement(u.Z,{title:n.summary},a.createElement(r.Z,{to:s().siteHome+"course/view.php?id="+n.id},n.name))," ","on Moodle Academy.")}},80069:function(e,t,n){"use strict";n.d(t,{Z:function(){return d}});var a=n(67294),o=n(87918),r=n(80684),i=n(86886),l=n(34673),s=n(3905),u=function(e,t,n){return void 0===n&&(n="info"),a.createElement(i.ZP,{item:!0,key:e},a.createElement(r.Z,{title:t},a.createElement(o.Z,{label:e,color:n})))};function d(e){var t=e.filepath,n=e.summary,o=function(e){var t=e.required,n=void 0!==t&&t,a=e.legacy,o=void 0!==a&&a,r=e.deprecated,i=void 0!==r&&r,l=e.refreshedDuringUpgrade,s=void 0!==l&&l,d=e.refreshedDuringPurge,c=void 0!==d&&d,p=[];return s&&p.push(u("Upgradable","Changes to this file or directory will be re-applied during a Moodle upgrade. If you make any changes to it, you can simply increment the version number and perform a Moodle upgrade.","info")),c&&p.push(u("Refreshed on cache purge","The contents of this file or directory are cached. To see your changes you can simply purge Moodle's caches and refresh the page.","info")),n&&p.push(u("Required","This file must be present","success")),o&&p.push(u("Legacy","Use of this file is being phased out. It is still supported for older installations but will be removed..","warning")),i&&p.push(u("Deprecated","Use of this file is deprecated and not recommended.It may still be provided for older versions of Moodle but is no longer used.","error")),p}(e),r=e.description?a.createElement(i.ZP,{item:!0,xs:12},e.description):null;return a.createElement(s.Zo,null,a.createElement(i.ZP,{container:!0,spacing:2},a.createElement(i.ZP,{item:!0,xs:6},a.createElement("h4",null,n)),a.createElement(i.ZP,{item:!0,xs:6},a.createElement(i.ZP,{container:!0,spacing:2,justifyContent:"flex-end"},o)),a.createElement(i.ZP,{item:!0,xs:12},a.createElement("h5",null,"File path:"," ",t)),r,function(e){var t=e.example,n=e.open,o=void 0!==n&&n;return t?a.createElement(i.ZP,{item:!0,xs:12},a.createElement(l.Z,{summary:a.createElement("summary",null,"View example"),open:o},t)):null}(e)))}},78989:function(e,t,n){"use strict";n.d(t,{W7:function(){return p}});var a,o=n(67294),r=n(46975),i=JSON.parse('{"plugintypes":{"antivirus":"lib/antivirus","availability":"availability/condition","qtype":"question/type","mod":"mod","auth":"auth","calendartype":"calendar/type","customfield":"customfield/field","enrol":"enrol","message":"message/output","block":"blocks","media":"media/player","filter":"filter","editor":"lib/editor","format":"course/format","dataformat":"dataformat","profilefield":"user/profile/field","report":"report","coursereport":"course/report","gradeexport":"grade/export","gradeimport":"grade/import","gradereport":"grade/report","gradingform":"grade/grading/form","mlbackend":"lib/mlbackend","mnetservice":"mnet/service","webservice":"webservice","repository":"repository","portfolio":"portfolio","search":"search/engine","qbank":"question/bank","qbehaviour":"question/behaviour","qformat":"question/format","plagiarism":"plagiarism","tool":"admin/tool","cachestore":"cache/stores","cachelock":"cache/locks","fileconverter":"files/converter","contenttype":"contentbank/contenttype","theme":"theme","local":"local","h5plib":"h5p/h5plib","paygw":"payment/gateway"},"subsystems":{"access":null,"admin":"admin","adminpresets":"admin/presets","analytics":"analytics","antivirus":"lib/antivirus","auth":"auth","availability":"availability","backup":"backup/util/ui","badges":"badges","block":"blocks","blog":"blog","bulkusers":null,"cache":"cache","calendar":"calendar","cohort":"cohort","comment":"comment","competency":"competency","completion":"completion","contentbank":"contentbank","countries":null,"course":"course","courseformat":"course/format","currencies":null,"customfield":"customfield","dbtransfer":null,"debug":null,"editor":"lib/editor","edufields":null,"enrol":"enrol","error":null,"favourites":"favourites","filepicker":null,"fileconverter":"files/converter","files":"files","filters":"filter","form":"lib/form","grades":"grade","grading":"grade/grading","group":"group","help":null,"hub":null,"h5p":"h5p","imscc":null,"install":null,"iso6392":null,"langconfig":null,"license":null,"mathslib":null,"media":"media","message":"message","mimetypes":null,"mnet":"mnet","my":"my","notes":"notes","pagetype":null,"payment":"payment","pix":null,"plagiarism":"plagiarism","plugin":null,"portfolio":"portfolio","privacy":"privacy","question":"question","rating":"rating","reportbuilder":"reportbuilder","repository":"repository","rss":"rss","role":"admin/roles","search":"search","table":"lib/table","tag":"tag","timezones":null,"user":"user","userkey":"lib/userkey","webservice":"webservice","xapi":"lib/xapi"}}'),l=function(e){return function(t){var n=t.plugintype,a=void 0===n?"plugintype":n,o=t.pluginname,r=void 0===o?"pluginname":o,i=t.filepath,l=void 0===i?null:i,s=function(e){return function(t){return e.plugintypes[t]?e.plugintypes[t]:"[path/to/"+t+"]"}}(e)(a);return""+(s+=r?"/"+r:"/[pluginname]")+l}},s=l(i),u=(s(i),function(e){if(!e.showFileHeader)return"";switch(null==e?void 0:e.filetype){case"xml":return"";case"js":case"javascript":return function(e){var t=e.plugintype,n=void 0===t?"plugintype":t,a=e.pluginname,o=void 0===a?"pluginname":a,r=e.examplePurpose,i=e.modulename;if(!r)throw Error("Purpose must be specified");if(!i)throw Error("AMD Module name must be specified");return["/**"," * "+r+" for the "+n+"_"+o+" plugin."," *"," * @module   "+n+"_"+o+"/"+i," * @copyright Year, You Name <your@email.address>"," * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later"," */",""].join("\n")}(e);default:return function(e){var t=e.plugintype,n=void 0===t?"plugintype":t,a=e.pluginname,o=void 0===a?"pluginname":a,r=e.examplePurpose;if(!r)throw Error("Purpose must be specified");return["/**"," * "+r+" for the "+n+"_"+o+" plugin."," *"," * @package   "+n+"_"+o," * @copyright Year, You Name <your@email.address>"," * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later"," */",""].join("\n")}(e)}}),d=function(e){return e.showLicense?(e.filetype,"// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n"):""},c=function(e){var t=e.filetype,n=void 0===t?"php":t;switch(n){case"js":case"javascript":return"javascript";case"xml":return"xml";case"php":case null:return"php";default:return n}},p=(a=i,function(e,t){var n,i=Object.assign({plugintype:"plugintype",showLicense:!0,showFileHeader:!0,filepath:null!=(n=e.exampleFilepath)?n:e.filepath},e),s=l(a),p=function(e,t){void 0===t&&(t=null);var n=[d(e),u(e),e.example?e.example:t||null].filter((function(e){return e})).map((function(e){return e.trim()})).join("\n\n");return[function(e){var t=e.filetype;switch(void 0===t?"php":t){case"js":case"javascript":case"xml":return null;default:return"<?php"}}(e),n].filter((function(e){return e})).join("\n")}(i,t);return o.createElement(r.Z,{title:s(i),language:c(i)},p)})},52305:function(e,t,n){"use strict";n.r(t),n.d(t,{assets:function(){return v},contentTitle:function(){return g},default:function(){return x},frontMatter:function(){return f},metadata:function(){return k},toc:function(){return w}});var a=n(83117),o=n(80102),r=(n(67294),n(3905)),i=n(13904),l=n(50793),s=n(78989),u=n(60620),d=n(65488),c=n(85162),p=n(95757),m=n(74936),h=["components"],f={title:"Course format",tags:["Plugins","Format"]},g=void 0,k={unversionedId:"apis/plugintypes/format/index",id:"apis/plugintypes/format/index",title:"Course format",description:"Course formats are plugins that determine the layout of course resources.",source:"@site/docs/apis/plugintypes/format/index.md",sourceDirName:"apis/plugintypes/format",slug:"/apis/plugintypes/format/",permalink:"/devdocs/docs/apis/plugintypes/format/",draft:!1,editUrl:"https://github.com/moodle/devdocs/edit/main/docs/apis/plugintypes/format/index.md",tags:[{label:"Plugins",permalink:"/devdocs/docs/tags/plugins"},{label:"Format",permalink:"/devdocs/docs/tags/format"}],version:"current",lastUpdatedBy:"Andrew Lyons",lastUpdatedAt:1655463803,formattedLastUpdatedAt:"17/06/2022",frontMatter:{title:"Course format",tags:["Plugins","Format"]},sidebar:"docs",previous:{title:"Filter plugins",permalink:"/devdocs/docs/apis/plugintypes/filter/"},next:{title:"Migrating 3.11 formats",permalink:"/devdocs/docs/apis/plugintypes/format/migration"}},v={},b={examplePurpose:"Output content",plugintype:"format",pluginname:"pluginname",filepath:"/output/courseformat/content.php"},y={examplePurpose:"Output section",plugintype:"format",pluginname:"pluginname",filepath:"/output/courseformat/content/section.php"},N={examplePurpose:"Output cmitem",plugintype:"format",pluginname:"pluginname",filepath:"/output/courseformat/content/section/cmitem.php"},w=[{value:"File structure",id:"file-structure",level:2},{value:"format.php",id:"formatphp",level:3},{value:"lib.php",id:"libphp",level:3},{value:"lang/en/format_pluginname.php",id:"langenformat_pluginnamephp",level:3},{value:"classes/output/renderer.php",id:"classesoutputrendererphp",level:3},{value:"version.php",id:"versionphp",level:3},{value:"classes/output/courseformat/",id:"classesoutputcourseformat",level:3},{value:"templates/ and templates/local/",id:"templates-and-templateslocal",level:3},{value:"Creating a new format",id:"creating-a-new-format",level:2},{value:"Using tool_pluginskel",id:"using-tool_pluginskel",level:3},{value:"Manual option: copy the code from an existing code",id:"manual-option-copy-the-code-from-an-existing-code",level:3},{value:"Upgrading format to the next Moodle version",id:"upgrading-format-to-the-next-moodle-version",level:2},{value:"Extending the format base class",id:"extending-the-format-base-class",level:2},{value:"Course sections",id:"course-sections",level:2},{value:"Course features",id:"course-features",level:3},{value:"Course format options",id:"course-format-options",level:3},{value:"Rendering a course",id:"rendering-a-course",level:2},{value:"Format output classes and templates",id:"format-output-classes-and-templates",level:2},{value:"Override output classes",id:"override-output-classes",level:3},{value:"Creating the basic output structure",id:"creating-the-basic-output-structure",level:3},{value:"Basic output classes",id:"basic-output-classes",level:4},{value:"Basic template files",id:"basic-template-files",level:4},{value:"Override mustache blocks",id:"override-mustache-blocks",level:3},{value:"Scenario 1: adding blocks directly on the three main mustache templates",id:"scenario-1-adding-blocks-directly-on-the-three-main-mustache-templates",level:4},{value:"Scenario 2: keep all the intermediate templates structure",id:"scenario-2-keep-all-the-intermediate-templates-structure",level:4},{value:"Scenario 3: just keep a few renderer methods",id:"scenario-3-just-keep-a-few-renderer-methods",level:4},{value:"The course editor structure",id:"the-course-editor-structure",level:2},{value:"Enabling the course editor",id:"enabling-the-course-editor",level:3},{value:"Course elements data attributes.",id:"course-elements-data-attributes",level:3}],_={toc:w};function x(e){var t,g=e.components,v=(0,o.Z)(e,h);return(0,r.kt)("wrapper",(0,a.Z)({},_,v,{components:g,mdxType:"MDXLayout"}),(0,r.kt)(i.Z,(0,a.Z)({frontMatter:f},void 0!==k?{metadata:k}:{},{mdxType:"MoodlePageBanner"})),(0,r.kt)("p",null,"Course formats are plugins that determine the layout of course resources."),(0,r.kt)("p",null,"Course formats determine how the course main page looks like (/course/view.php) in both view and editing mode. They are also responsible for building a navigation tree inside the course (displayed to users in the navigation block, course index, and breadcrumb). They can organize the course content in sections. The course creator or teacher can specify the course format for the course in the course edit form."),(0,r.kt)("p",null,"Course formats also can add their own options fields to the course edit form. They can add course-dependent content to the header/footer of any page inside the course, not only /course/view.php"),(0,r.kt)("h2",{id:"file-structure"},"File structure"),(0,r.kt)("p",null,"All course format files must be located inside the ",(0,r.kt)("strong",{parentName:"p"},"course/format/pluginname")," folder."),(0,r.kt)("details",null,(0,r.kt)("summary",null,"View an example directory layout for the `format_pluginname` plugin."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-console"}," course/format/pluginname/\n |-- classes\n |   `-- output\n |       `-- courseformat\n |           `-- (Overridden outputs)\n |       `-- renderer.php\n |-- db\n |   `-- access.php\n |-- lang\n |   `-- en\n |       `-- format_pluginname.php\n |-- format.php\n |-- lib.php\n `-- version.php\n"))),(0,r.kt)("p",null,"Some of the important files for the format plugintype are described below. See the ",(0,r.kt)("a",{parentName:"p",href:"../commonfiles"},"common plugin files")," documentation for details of other files which may be useful in your plugin."),(0,r.kt)("h3",{id:"formatphp"},"format.php"),(0,r.kt)(u.nR,{required:!0,filepath:"/format.php",summary:"Format file course rendering",plugintype:"format",pluginname:"pluginname",example:m.Z,description:"This file the layout itself. It is included from course/view.php when a user accesses the course.",mdxType:"ComponentFileSummary"}),(0,r.kt)("p",null,"As it can be seen in the example, once the format base instance is created (the return object of ",(0,r.kt)("inlineCode",{parentName:"p"},"core_courseformat\\base::instance")," function), the plugin must define any necessary setting (in the example is just set_section_number but any plugin can define its own extra methods). Once this is done, the get_output_classname will return the correct class name for the content output and the format renderer will be responsible for rendering the full course. See ",(0,r.kt)("a",{parentName:"p",href:"#rendering-a-course"},"Rendering a course")," for more information."),(0,r.kt)("h3",{id:"libphp"},"lib.php"),(0,r.kt)(p.Gf,{plugintype:"format",pluginname:"pluginname",example:"\nclass format_pluginname extends core_courseformat\\base {\n\n    /**\n     * Returns true if this course format uses sections.\n     *\n     * @return bool\n     */\n    public function uses_sections() {\n        return true;\n    }\n\n    public function uses_indentation(): bool {\n        return false;\n    }\n\n    public function uses_course_index() {\n        return true;\n    }\n\n    /**\n     * Returns the information about the ajax support in the given source format.\n     *\n     * The returned object's property (boolean)capable indicates that\n     * the course format supports Moodle course ajax features.\n     *\n     * @return stdClass\n     */\n    public function supports_ajax() {\n        $ajaxsupport = new stdClass();\n        $ajaxsupport->capable = true;\n        return $ajaxsupport;\n    }\n\n    public function supports_components() {\n        return true;\n    }\n\n    /**\n     * Whether this format allows to delete sections.\n     *\n     * Do not call this function directly, instead use {@link course_can_delete_section()}\n     *\n     * @param int|stdClass|section_info $section\n     * @return bool\n     */\n    public function can_delete_section($section) {\n        return true;\n    }\n\n    /**\n     * Indicates whether the course format supports the creation of a news forum.\n     *\n     * @return bool\n     */\n    public function supports_news() {\n        return true;\n    }\n\n    /**\n     * Returns the display name of the given section that the course prefers.\n     *\n     * This method is required for inplace section name editor.\n     *\n     * @param int|stdClass $section Section object from database or just field section.section\n     * @return string Display name that the course format prefers, e.g. \"Topic 2\"\n     */\n    public function get_section_name($section) {\n        $section = $this->get_section($section);\n        if ((string)$section->name !== '') {\n            return format_string(\n                $section->name,\n                true,\n                ['context' => context_course::instance($this->courseid)]\n            );\n        } else {\n            return $this->get_default_section_name($section);\n        }\n    }\n}\n\n/**\n * Implements callback inplace_editable() allowing to edit values in-place.\n *\n * This method is required for inplace section name editor.\n *\n * @param string $itemtype\n * @param int $itemid\n * @param mixed $newvalue\n * @return inplace_editable\n */\nfunction format_pluginname_inplace_editable($itemtype, $itemid, $newvalue) {\n    global $DB, $CFG;\n    require_once($CFG->dirroot . '/course/lib.php');\n    if ($itemtype === 'sectionname' || $itemtype === 'sectionnamenl') {\n        $section = $DB->get_record_sql(\n            'SELECT s.* FROM {course_sections} s JOIN {course} c ON s.course = c.id WHERE s.id = ? AND c.format = ?',\n            [$itemid, 'pluginname'],\n            MUST_EXIST\n        );\n        $format = core_courseformat\\base::instance($section->course);\n        return $format->inplace_editable_update_section_name($section, $itemtype, $newvalue);\n    }\n}\n",legacy:!1,required:!0,mdxType:"Lib"},"The main library of the format. It should contain a class `format_pluginname` extending `core_courseformat\\base`, this class is known as the format base class. Also, it may contain callbacks for other core and contributed APIs if necessary."),(0,r.kt)("p",null,"The format base class is the most important part of the course format as it defines how the format interacts with both frontend and backend. Depending on the methods a format plugin overrides the course will behave in different ways."),(0,r.kt)("h3",{id:"langenformat_pluginnamephp"},"lang/en/format_pluginname.php"),(0,r.kt)(p.Uo,{plugintype:"format",pluginname:"pluginname",example:"\n$string['addsections'] = 'Add section';\n$string['currentsection'] = 'This section';\n$string['deletesection'] = 'Delete section';\n$string['editsection'] = 'Edit section';\n$string['editsectionname'] = 'Edit section name';\n$string['hidefromothers'] = 'Hide section';\n$string['newsectionname'] = 'New name for section {$a}';\n$string['pluginname'] = 'pluginname format';\n$string['privacy:metadata'] = 'The Sample format plugin does not store any personal data.';\n$string['sectionname'] = 'Section';\n$string['showfromothers'] = 'Show section';\n",mdxType:"Lang"}),(0,r.kt)("h3",{id:"classesoutputrendererphp"},"classes/output/renderer.php"),(0,r.kt)(u.nR,((t={required:!0,filepath:"/format.php",summary:"Format file course rendering",plugintype:"format",pluginname:"pluginname",example:"namespace format_pluginname\\output;\n\nuse core_courseformat\\base as format_base;\nuse core_courseformat\\output\\section_renderer;\nuse moodle_page;\n\n/**\n* Basic renderer for pluginname format.\n*\n* @copyright 2022 Someone <someone@somewhere.com>\n    * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n    */\n    class renderer extends section_renderer {\n    // Override any necessary renderer method here.\n\n    /**\n    * Generate the section title, wraps it in a link to the section page if page is to be displayed on a separate page.\n    *\n    * This method is required to enable the inplace section title editor.\n    *\n    * @param section_info|stdClass $section The course_section entry from DB\n    * @param stdClass $course The course entry from DB\n    * @return string HTML to output.\n    */\n    public function section_title($section, $course) {\n    return $this->render(format_base::instance($course)->inplace_editable_render_section_name($section));\n    }\n\n    /**\n    * Generate the section title to be displayed on the section page, without a link.\n    *\n    * This method is required to enable the inplace section title editor.\n    *\n    * @param section_info|stdClass $section The course_section entry from DB\n    * @param int|stdClass $course The course entry from DB\n    * @return string HTML to output.\n    */\n    public function section_title_without_link($section, $course) {\n    return $this->render(format_base::instance($course)->inplace_editable_render_section_name($section, false));\n    }\n    }\n"}).required=!0,t.description="Unlike the rest of the Moodle plugins, all course format plugins must provide a renderer.",t.mdxType="ComponentFileSummary",t)),(0,r.kt)("p",null,"This class should:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"use the namespace ",(0,r.kt)("inlineCode",{parentName:"li"},"format_pluginname\\output")," (all files in the classes folder should be namespaced)"),(0,r.kt)("li",{parentName:"ul"},"be called renderer (all files in the classes folder match the name of the file)"),(0,r.kt)("li",{parentName:"ul"},"extend ",(0,r.kt)("inlineCode",{parentName:"li"},"core_courseformat\\output\\section_renderer"),". See Output renderers for more information."),(0,r.kt)("li",{parentName:"ul"},"Use the namespace ",(0,r.kt)("inlineCode",{parentName:"li"},"format_pluginname\\output")," (all files in the classes folder should be namespaced)"),(0,r.kt)("li",{parentName:"ul"},"The class should be called renderer (all files in the classes folder match the name of the file)"),(0,r.kt)("li",{parentName:"ul"},"Should extend ",(0,r.kt)("inlineCode",{parentName:"li"},"core_courseformat\\output\\section_renderer"),". See Output renderers for more information.")),(0,r.kt)("p",null,"Renderer methods are powerful enough to override all the rendering logic of the course. However, by default, the way to render a course should be based on output classes and templates (see the ",(0,r.kt)("a",{parentName:"p",href:"#format-output-classes-and-templates"},"output structure section")," for more information)."),(0,r.kt)("p",null,"Since the course format is all about the display it is very important to separate HTML and PHP. All HTML code should be in your ",(0,r.kt)("inlineCode",{parentName:"p"},"format_pluginname_renderer")," class in renderer.php. Ideally, format.php will only call one function from the renderer. Use of renderer is required if you want to output content header and footer."),(0,r.kt)("h3",{id:"versionphp"},"version.php"),(0,r.kt)(p.f_,{plugintype:"format",mdxType:"VersionPHP"}),(0,r.kt)("h3",{id:"classesoutputcourseformat"},"classes/output/courseformat/"),(0,r.kt)(l.U6,{version:"4.0",issueNumber:"MDL-65974",mdxType:"Since"}),(0,r.kt)("p",null,"The course rendering is based on output classes and templates. Course format plugins can override specific output classes to provide alternative data to the templates. All output classes inside output/courseformat folder will override the default ones automatically. See the output structure section below for more information"),(0,r.kt)("h3",{id:"templates-and-templateslocal"},"templates/ and templates/local/"),(0,r.kt)(l.U6,{version:"4.0",issueNumber:"MDL-65974",mdxType:"Since"}),(0,r.kt)("p",null,"The course rendering is based on output classes and templates. This folder will contain the specific mustache templates of your plugin. See the ",(0,r.kt)("a",{parentName:"p",href:"#override-mustache-blocks"},"override mustache blocks section")," section for more information."),(0,r.kt)("h2",{id:"creating-a-new-format"},"Creating a new format"),(0,r.kt)("h3",{id:"using-tool_pluginskel"},"Using tool_pluginskel"),(0,r.kt)("p",null,'The easiest way to create a new course format using the latest version of tool_pluginskel. You can use the following yaml file to generate a basic course format skeleton. It is important to note that the "requires" attributes should be at least 4.0 in order to generate a Moodle 4.0+ version of the plugin, otherwise the resulting plugin will use a deprecated structure.'),(0,r.kt)("details",null,(0,r.kt)("summary",null,"View pluginskel recipe"),(0,r.kt)("div",null,(0,r.kt)(l.dn,{language:"yaml",mdxType:"CodeBlock"},'## This is an example recipe file that you can use as a template for your own plugins.\n## See the list of all files it would generate:\n##\n##     php generate.php example.yaml --list-files\n##\n## View a particular file contents without actually writing it to the disk:\n##\n##     php generate.php example.yaml --file=version.php\n##\n## To see the full list of options, run:\n##\n##     php generate.php --help\n##\n---\n## Frankenstyle component name.\ncomponent: format_pluginname\n\n## Human readable name of the plugin.\nname: Example pluginname format\n\n## Human readable release number.\nrelease: "0.1.0"\n\n## Plugin version number, e.g. 2016062100. Will be set to current date if left empty.\n#version: 2016121200\n\n## Required Moodle version, e.g. 2015051100 or "2.9".\nrequires: "4.0"\n\n## Plugin maturity level. Possible options are MATURIY_ALPHA, MATURITY_BETA,\n## MATURITY_RC or MATURIY_STABLE.\nmaturity: MATURITY_BETA\n\n## Copyright holder(s) of the generated files and classes.\ncopyright: YOURNAME <YOURNAME@YOURSITE.com>\n\n## Features flags can control generation of optional files/code fragments.\nfeatures:\n  readme: true\n  license: true\n\n  ## Privacy API implementation\nprivacy:\n  haspersonaldata: false\n  uselegacypolyfill: false\n\nformat_features:\n  # Create the Moodle 4.0+ basic template structure.\n  basic_outputs: true\n\n  # General format features.\n  uses_sections: true\n  uses_course_index: true\n  uses_indentation: false\n  uses_inplace_editor: true\n  uses_reactive_components: true\n  uses_news: true\n\n## Explicitly added strings\nlang_strings:\n  - id: mycustomstring\n    text: You can add \'extra\' strings via the recipe file.\n  - id: mycustomstring2\n    text: Another string with {$a->some} placeholder.\n\n    ## Needed for course format plugins.\n  - id: addsections\n    text: Add section\n  - id: currentsection\n    text: This section\n  - id: editsection\n    text: Edit section\n  - id: editsectionname\n    text: Edit section name\n  - id: deletesection\n    text: Delete section\n  - id: newsectionname\n    text: New name for section {$a}\n  - id: sectionname\n    text: Section\n  - id: hidefromothers\n    text: Hide section\n  - id: showfromothers\n    text: Show section\n'))),(0,r.kt)("h3",{id:"manual-option-copy-the-code-from-an-existing-code"},"Manual option: copy the code from an existing code"),(0,r.kt)("p",null,"However, if for some reason you cannot use the latest version of tool_pluginskel, you can copy the code from the topics or weeks formats. Once you do the copy you should:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Copy the folder containing the format files."),(0,r.kt)("li",{parentName:"ol"},"Rename the folder to the new name. Course format names cannot exceed 21 characters."),(0,r.kt)("li",{parentName:"ol"},"Rename language files in course/format/pluginname/lang/"),(0,r.kt)("li",{parentName:"ol"},"Change ",(0,r.kt)("inlineCode",{parentName:"li"},"$string['pluginname']")," in course/format/pluginname/lang/en/format_pluginname.php to the new name."),(0,r.kt)("li",{parentName:"ol"},"Rename class name in lib.php to format_pluginname."),(0,r.kt)("li",{parentName:"ol"},"Search and replace other occurrences of the old format name, for example in renderer, capabilities names, settings, JavaScript libraries, etc."),(0,r.kt)("li",{parentName:"ol"},"The new format is ready for modification."),(0,r.kt)("li",{parentName:"ol"},"After modifying the code, check it with the Code checker.")),(0,r.kt)("h2",{id:"upgrading-format-to-the-next-moodle-version"},"Upgrading format to the next Moodle version"),(0,r.kt)("p",null,"Read the files course/format/upgrade.txt, lib/upgrade.txt, and also upgrade.txt of the core APIs that you use in your course format plugin and make changes according to them. When testing don't forget to enable Developer debugging level and error display (Settings->Developer->Debugging)."),(0,r.kt)("p",null,"In case your plugin is a Moodle 3.11 compatible plugin, see the ",(0,r.kt)("a",{parentName:"p",href:"./format/migration"},"migration guide")," for more information."),(0,r.kt)("h2",{id:"extending-the-format-base-class"},"Extending the format base class"),(0,r.kt)("p",null,"All format plugins require a lib.php file containing a format_pluginname class. This class should extend ",(0,r.kt)("inlineCode",{parentName:"p"},"core_courseformat\\base")," and define how the plugin will integrate with the core_courseformat subsystem."),(0,r.kt)("p",null,"Here are the main features in course formats and responsible for them format_base functions."),(0,r.kt)("h2",{id:"course-sections"},"Course sections"),(0,r.kt)("p",null,"There is existing functionality in Moodle core to support organizing course modules into sections. Course format plugins do not have to use them but most of them do. Database table {course_sections} stores basic information about sections. Also section info is cached and returned by ",(0,r.kt)("inlineCode",{parentName:"p"},"format->get_modinfo()")," (or the global function ",(0,r.kt)("inlineCode",{parentName:"p"},"get_fast_modinfo()"),") so every action changing the sections must be followed by rebuild_course_cache(). Course module must always belong to the section. Even if your course format does not use sections, the section with the number 0 is always created."),(0,r.kt)("p",null,"You must define ",(0,r.kt)("inlineCode",{parentName:"p"},"$string['sectionname']")," if your language file even if the format does not use sections because it can be called unconditionally from other parts of the code, even though it won't be displayed."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"th"},"core_courseformat\\base")," Overridable method"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uses_sections()")),(0,r.kt)("td",{parentName:"tr",align:null},"returns true or false if the format uses sections or not. There is a global function ",(0,r.kt)("br",null)," ",(0,r.kt)("inlineCode",{parentName:"td"},"course_format_uses_sections()")," that invokes it. It affects default navigation tree building. Various modules and reports may call this function to know whether to display the section name for the particular module or not.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"get_default_section_name()")),(0,r.kt)("td",{parentName:"tr",align:null},"This method gets the default section name if the user has not provided a")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"get_section_name()")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns the name for a particular section. This function may be called often so it should use only fields cached in section_info object (field course_sections.name is always cached) ",(0,r.kt)("br",null)," In 3.0+, it checks if the ",(0,r.kt)("inlineCode",{parentName:"td"},"$string['sectionname']")," is available in the lang file. If the section name string is not available, it returns an empty string.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"get_view_url()")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns the URL for a particular section, it can be either anchored on course view page or separate page. See parent function PHPdocs for more details")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"is_section_current()")),(0,r.kt)("td",{parentName:"tr",align:null},"Specifies if the section is current, for example, current week or highlighted topic. This function is only used if your renderer uses it for example if your renderer extends format_section_renderer_base. This function is not called from anywhere else in Moodle core.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"get_section_highlighted_name()")),(0,r.kt)("td",{parentName:"tr",align:null},"Return the textual label for a current/highlighted section.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"set_section_number()")),(0,r.kt)("td",{parentName:"tr",align:null},"Setup the format base instance to display a single section instead of all. This method is used to prepare the format base instance to render the course.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"get_section_number()")),(0,r.kt)("td",{parentName:"tr",align:null},"Return zero if the course will deploy all sections or a section number if the current page is only presenting a single section.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"get_course_display()")),(0,r.kt)("td",{parentName:"tr",align:null},"Return ",(0,r.kt)("inlineCode",{parentName:"td"},"COURSE_DISPLAY_SINGLEPAGE")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"COURSE_DISPLAY_MULTIPAGE")," depending if the course has multiple section per page or not.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"get_last_section_number()")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns the last section")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"get_max_sections()")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns the maximum number of sections this format can contain")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"page_title()")),(0,r.kt)("td",{parentName:"tr",align:null},"Formats can override this method to alter the page title.")))),(0,r.kt)("h3",{id:"course-features"},"Course features"),(0,r.kt)("p",null,"The format base class has several methods to integrate the course format with the frontend course editor and its webservices."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"th"},"core_courseformat\\base")," Overridable method"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"ajax_section_move()")),(0,r.kt)("td",{parentName:"tr",align:null},"Code executed after sections were rearranged using drag and drop. See the example in format_topics where sections have automatic names depending on their sequence number")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uses_course_index()")),(0,r.kt)("td",{parentName:"tr",align:null},"Return true if the course format is compatible with the course index drawer. Note that classic based themes are not compatible with the course index.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uses_indentation()")),(0,r.kt)("td",{parentName:"tr",align:null},"If the format uses the legacy activity indentation.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"supports_components()")),(0,r.kt)("td",{parentName:"tr",align:null},"Since Moodle 4.0 the course is rendered using reactive UI components. This kind of component will be the only standard in Moodle 4.3+ but, until then, formats can override this method to specify if they want to use the previous UI elements or the new ones.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"supports_news()")),(0,r.kt)("td",{parentName:"tr",align:null},"Determine if the news forum is mandatory or not on the course format.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"get_default_blocks()")),(0,r.kt)("td",{parentName:"tr",align:null},"Course format can specify which blocks should be added to the course page when the course is created in this format.",(0,r.kt)("br",null),"If the course format is changed during course edit, blocks are not changed.",(0,r.kt)("br",null),"Whatever course format specifies in the method, site admin can override it with ",(0,r.kt)("inlineCode",{parentName:"td"},"$CFG->defaultblocks_override")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"$CFG->defaultblocks_pluginname"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"extend_course_navigation()")),(0,r.kt)("td",{parentName:"tr",align:null},"This function is called when a navigation tree is built.",(0,r.kt)("br",null),"Node for the course will be created in navigationlib for you and all standard available branches like 'Participants' or 'Reports' will be added to it. After that course format can add nodes for sections and modules. There is a default implementation that adds branches for course sections and modules under them. Or if the course format does not use sections, all modules will just be placed under course mode. The course format is able to override the default navigation tree building.",(0,r.kt)("br",null),"Note that if navigationlib can not find the node for the current course module, the node will be added automatically (after this callback).")))),(0,r.kt)("h3",{id:"course-format-options"},"Course format options"),(0,r.kt)("p",null,"The core table {course_format_options} in Moodle database is designed to store additional options for course formats. Those options may belong for the whole course or just for course section."),(0,r.kt)("p",null,"Course format options must not have the same names as fields in database table {course}, section options must not have the same names as fields in {course_sections}. Also, make sure names do not duplicate completion and conditional fields in edit forms."),(0,r.kt)("p",null,"When the teacher changes the course format in the course edit form AND the old and the new course formats share the same option name, the value of this option is copied from one format to another. For example, if the course had format Topics and had 8 sections in it and teacher changes format to Weeks, the course will have 8 weeks in it."),(0,r.kt)("p",null,"During backup the course format options are stored as if they were additional fields in {course} table. Do not store IDs of elements (courses, sections, etc.) in course format options because they will not be backed up and restored properly. You can use section numbers because they are relative inside the course. If absolute ids are necessary you can create your own backup/restore scripts, see Backup API."),(0,r.kt)("p",null,"Webservices expect course format options to be passed in additional entities but for backward compatibility ",(0,r.kt)("inlineCode",{parentName:"p"},"numsections"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"hiddensections")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"coursedisplay")," can also be passed as if they were fields in {course} table."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"th"},"core_courseformat\\base")," Overridable method"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"course_format_options()")),(0,r.kt)("td",{parentName:"tr",align:null},"By overriding this method course format specifies which additional options it has for course")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"section_format_options()")),(0,r.kt)("td",{parentName:"tr",align:null},"By overriding this method course format specifies which additional options it has for course section. Note that since section information is cached you may want to cache some additional options as well. See PHPdocs for more information")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"get_format_options()")),(0,r.kt)("td",{parentName:"tr",align:null},"(usually no need to override) low level function to retrieve course format options values. It is more convenient to use methods get_course() and get_section()")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"create_edit_form_elements()")),(0,r.kt)("td",{parentName:"tr",align:null},"This function is called to alter course edit form and standard section edit form. The default implementation creates simple form elements for each option defined in either ",(0,r.kt)("inlineCode",{parentName:"td"},"course_format_options()")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"section_format_options()"),". Overwrite it if you want to have more comprehensive form elements or if you do not want options to appear in edit forms, etc.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"edit_form_validation()")),(0,r.kt)("td",{parentName:"tr",align:null},"Overwrite if course format plugin needs additional validation for it's option in course edit form")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"update_format_options()")),(0,r.kt)("td",{parentName:"tr",align:null},"(usually no need to override) low level function to insert/update records in db table {course_format_options}")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"update_course_format_options()")),(0,r.kt)("td",{parentName:"tr",align:null},"updates course format options with the data from the edit course form. The plugin can override for example to include calculated options fields, especially when the course format is being changed. For example, format_topics and format_weeks automatically fill field ",(0,r.kt)("inlineCode",{parentName:"td"},"numsections")," when the user switches from other format")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"update_section_format_options()")),(0,r.kt)("td",{parentName:"tr",align:null},"updates course format options for the section with the data from the edit section form")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"editsection_form()")),(0,r.kt)("td",{parentName:"tr",align:null},"Return an instance of moodleform to edit a specified section. Default implementation returns instance of ",(0,r.kt)("inlineCode",{parentName:"td"},"editsection_form")," that automatically adds additional fields defined in section_format_options()")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"get_default_course_enddate()")),(0,r.kt)("td",{parentName:"tr",align:null},"Overwrite if the course format is time-based. The base class calculates the default course end date based on the number of sections.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"delete_format_data()")),(0,r.kt)("td",{parentName:"tr",align:null},"This hook method is called when the course is deleted and can be used to remove any course data not stored in the standards {course_format_options} and {course} tables (like user preferences, for example).")))),(0,r.kt)("p",null,"Course format base helpers\nThe format base class is used for all the core_courseformat integrations, from settings to rendering. All course output classes will receive the course format instance as a primary param and the class has several helper methods to get information about the format."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"th"},"core_courseformat\\base")," Overridable method"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"get_course()")),(0,r.kt)("td",{parentName:"tr",align:null},"(no need to override) returns object with all fields from db table {course} AND all course format options")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"get_section()")),(0,r.kt)("td",{parentName:"tr",align:null},"(no need to override) returns instance of section_info. It will contain all fields from table {course_sections} and all course format options for this section")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"get_sections()")),(0,r.kt)("td",{parentName:"tr",align:null},"Return all course sections (it is just a wrapper fo the modinfo get_section_info_all)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"get_course_display()")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns if the course is using a multi page or a single page display (",(0,r.kt)("inlineCode",{parentName:"td"},"COURSE_DISPLAY_MULTIPAGE")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"COURSE_DISPLAY_SINGLEPAGE"),")")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"get_modinfo()")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns the current course modinfo (equivalent to get_fast_modinfo but without specifying the course)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"get_renderer()")),(0,r.kt)("td",{parentName:"tr",align:null},"Return the course format renderer instance")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"get_output_classname()")),(0,r.kt)("td",{parentName:"tr",align:null},'This method gets a relative output class path (for example, "content',"\\",'section") and returns the correct output class namespace depending on if the format has overridden outputs or not. See ',(0,r.kt)("a",{parentName:"td",href:"#override-output-classes"},"overriding output classes")," section for more information.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"is_section_current()")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns if a specific section is marked as current (highlighted) or not.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"show_editor()")),(0,r.kt)("td",{parentName:"tr",align:null},"Do all the user and page validations to know if the current course display has to include editor options or not. This includes both page editing mode and user capabilities.")))),(0,r.kt)("h2",{id:"rendering-a-course"},"Rendering a course"),(0,r.kt)("p",null,"Each format plugin is responsible for rendering the course in the format.php file, this means each plugin can choose how to render the course content. However, there are some conventions on how a course should be rendered to integrate the plugin with the existing components."),(0,r.kt)("p",null,"The course rendering is done using four mains elements:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"File view.php:")," responsible for setting up the format base instance and rendering the content."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Course format renderer:")," all format plugins must provide its own version of the ",(0,r.kt)("inlineCode",{parentName:"li"},"core_courseformat\\output\\section_renderer")," (or provide an equivalent class with all the necessary methods)."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Output classes:")," by default all course elements have a specific output class inside course/format/output/local folder. Each one of them is responsible for generating the necessary data to render the templates. Format plugins can provide alternative versions of those output classes (see ",(0,r.kt)("a",{parentName:"li",href:"#override-output-classes"},"override output classes")," for more information)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Mustache templates:"),' each output class has its equivalent mustache template inside course/format/templates. All the course content is rendered using a single "content" template that includes all the rest as sub-templates. For this reason, a plugin that wants to override some templates must provide some extra templates in order to keep the template structure. See ',(0,r.kt)("a",{parentName:"li",href:"#creating-the-basic-output-structure"},"Creating the basic output structure")," section for more information.")),(0,r.kt)("p",null,"Unless there's a reason for it, the course structure should be rendered overriding the standard outputs and mustache templates."),(0,r.kt)("h2",{id:"format-output-classes-and-templates"},"Format output classes and templates"),(0,r.kt)("p",null,"The following diagram shows the standard output classes structure:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Output classes structure",src:n(84539).Z,width:"1964",height:"1427"})),(0,r.kt)("p",null,"There are three renderer methods used for refreshing fragments of the course page:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"render_content:")," used to render the full course. This method is not necessary as the content output itself will be used by default."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"course_section_updated:")," needed when the frontend needs to render a particular section. It is used mostly when a new section is created. By default it renders the core_courseformat\\output\\local\\content\\section output."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Course_section_updated_cm_item:")," used every time the frontend needs to update an activity card on the course page. By default it will render the core_courseformat\\output\\local\\content\\section\\cmitem. The reason why it uses this specific output is that it renders the full course module list item, not just the activity card.")),(0,r.kt)("p",null,"By default, the base renderer methods will use the format output components to render the full course. In case your plugins have special needs, it is possible to override those three methods directly into the format renderer class."),(0,r.kt)("h3",{id:"override-output-classes"},"Override output classes"),(0,r.kt)("p",null,"Instead of having several renderer methods on a single file, the core_courseformat subsystem splits the output logic through several small classes, each one for a specific UI component. Format plugins can easily override specific classes to alter the template data."),(0,r.kt)("p",null,"The course format base class has a special method called ",(0,r.kt)("strong",{parentName:"p"},"get_output_classname")," that returns the overridden class name if available in the format plugin (or the core one if not). In order to detect the format classes, your plugin must place the overridden one in the equivalent path inside your plugin format_pluginname\\output\\courseformat\\ folder"),(0,r.kt)("p",null,'For example, if a format plugin wants to add new options to the section action menu it should override the core_courseformat\\output\\local\\content\\section\\controlmenu. To do so the plugin class should be format_pluginname\\output\\courseformat\\content\\section\\controlmenu. You can find an example of an overridden output in the "course/format/topics/classes/output/courseformat/content/section/controlmenu.php" file.'),(0,r.kt)("h3",{id:"creating-the-basic-output-structure"},"Creating the basic output structure"),(0,r.kt)("p",null,"By default, the course renderer will use the core_courseformat output classes and templates. To override some parts of the course elements the plugin must provide a minimum output classes and template structure."),(0,r.kt)("h4",{id:"basic-output-classes"},"Basic output classes"),(0,r.kt)("p",null,"It is recommended your plugin overrides the 3 main course format elements:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"format_pluginname\\output\\courseformat\\content"),(0,r.kt)("li",{parentName:"ul"},"format_pluginname\\output\\courseformat\\content\\section"),(0,r.kt)("li",{parentName:"ul"},"format_pluginname\\output\\courseformat\\content\\section\\cmitem")),(0,r.kt)("p",null,"Those output classes should extend the equivalent core ones but, at least, they should override the ",(0,r.kt)("strong",{parentName:"p"},"get_template_name")," method to redirect the rendering template to the overridden template. It could also override the export_for_template to alter the template data if necessary.\nThis is the minimum output classes your plugin must provide:"),(0,r.kt)(d.Z,{mdxType:"Tabs"},(0,r.kt)(c.Z,{value:"contentOutput",label:"Content",default:!0,mdxType:"TabItem"},(0,r.kt)("div",null,(0,s.W7)(b,"\nnamespace format_pluginname\\output\\courseformat;\n\nuse core_courseformat\\output\\local\\content as content_base;\n\nclass content extends content_base {\n\n    /**\n     * Returns the output class template path.\n     *\n     * This method redirects the default template when the course content is rendered.\n     */\n    public function get_template_name(\\renderer_base $renderer): string {\n        return 'format_pluginname/local/content';\n    }\n}\n"))),(0,r.kt)(c.Z,{value:"sectionOutput",label:"Section",mdxType:"TabItem"},(0,r.kt)("div",null,(0,s.W7)(y,"\nnamespace format_pluginname\\output\\courseformat\\content;\n\nuse core_courseformat\\output\\local\\content\\section as section_base;\n\nclass section extends section_base {\n\n    /**\n     * Returns the output class template path.\n     *\n     * This method redirects the default template when the course section is rendered.\n     */\n    public function get_template_name(\\renderer_base $renderer): string {\n        return 'format_pluginname/local/content/section';\n    }\n}\n"))),(0,r.kt)(c.Z,{value:"cmitemOutput",label:"Cmitem",mdxType:"TabItem"},(0,r.kt)("div",null,(0,s.W7)(N,"\nnamespace format_pluginname\\output\\courseformat\\content\\section;\n\nuse core_courseformat\\output\\local\\content\\section\\cmitem as cmitem_base;\n\nclass cmitem extends cmitem_base {\n\n    /**\n     * Returns the output class template path.\n     *\n     * This method redirects the default template when the section activity item is rendered.\n     */\n    public function get_template_name(\\renderer_base $renderer): string {\n        return 'format_pluginname/local/content/section/cmitem';\n    }\n}\n")))),(0,r.kt)("h4",{id:"basic-template-files"},"Basic template files"),(0,r.kt)("p",null,"Unlike output classes, mustache files cannot be extended nor overridden. To be able to alter specific mustaches your plugin must provide a minimum template structure. To allow partial overriding, the core_courseformat template uses blocks instead of inclusions to include sub templates."),(0,r.kt)("p",null,"This is the minimum template structure your plugin must provide:"),(0,r.kt)(d.Z,{mdxType:"Tabs"},(0,r.kt)(c.Z,{value:"contentTemplate",label:"Content",default:!0,mdxType:"TabItem"},(0,r.kt)(l.dn,{language:"handlebars",title:"template/local/content.mustache",mdxType:"CodeBlock"},"{{!\n  Include the core content template.\n  This is the top template for a course.\n}}\n{{< core_courseformat/local/content }}\n    {{!\n        Add any general structure blocks override here.\n    }}\n\n    {{! Mandatory the content/section block. }}\n    {{$ core_courseformat/local/content/section }}\n        {{> format_pluginname/local/content/section }}\n    {{/ core_courseformat/local/content/section }}\n{{/ core_courseformat/local/content }}\n")),(0,r.kt)(c.Z,{value:"sectionTemplate",label:"Section",mdxType:"TabItem"},(0,r.kt)(l.dn,{language:"handlebars",title:"template/local/content/section.mustache",mdxType:"CodeBlock"},"{{!\n  Include the core content/section template.\n}}\n{{< core_courseformat/local/content/section }}\n    {{!\n        Add any section blocks override here.\n    }}\n    {{! Mandatory cmitem override }}\n    {{$ core_courseformat/local/content/section/cmitem }}\n        {{> format_pluginname/local/content/section/cmitem }}\n    {{/ core_courseformat/local/content/section/cmitem }}\n{{/ core_courseformat/local/content/section }}\n")),(0,r.kt)(c.Z,{value:"cmitemTemplate",label:"Cmitem",mdxType:"TabItem"},(0,r.kt)(l.dn,{language:"handlebars",title:"template/local/content/section/cmitem.mustache",mdxType:"CodeBlock"},"{{!\n  Include the core content/section/cmitem template.\n}}\n{{< core_courseformat/local/content/section/cmitem }}\n    {{!\n        Add any cm item blocks override here.\n    }}\n{{/ core_courseformat/local/content/section/cmitem }}\n"))),(0,r.kt)("h3",{id:"override-mustache-blocks"},"Override mustache blocks"),(0,r.kt)("p",null,"Once your plugin has the basic mustache structure, you can provide extra mustache blocks to override parts of the page. To do so it is important to understand first the special way in which the course format mustaches are included."),(0,r.kt)("p",null,"Most moodle mustache files include sub-templates by doing {{> path/to/the/template }}. However, in the course format subsystems, all sub-templates are loaded using a slightly different pattern."),(0,r.kt)("details",null,(0,r.kt)("summary",null,"View example: override course format templates using mustache blocks"),(0,r.kt)("div",null,(0,r.kt)("p",null,'For example, imagine a mustache file "original/path/parent" including "original/path/to/the/template":'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-handlebars"},"{{$ original/path/to/the/template }}\n    {{> original/path/to/the/template }}\n{{/ original/path/to/the/template }}\n")),(0,r.kt)("p",null,"Using this pattern any parent template can replace the sub-template doing:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-handlebars"},"{{! Then include the parent template }}\n{{< original/path/parent }}\n    {{! Add custom blocks. }}\n    {{$ original/path/to/the/template }}\n        {{> new/template/path }}\n    {{/ original/path/to/the/template }}\n{{/ original/path/parent }}\n")),(0,r.kt)("p",null,"Or can wrap the content with extra HTML:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-handlebars"},'{{! Then include the parent template }}\n{{< original/path/parent }}\n    {{! Add custom blocks. }}\n    {{$ original/path/to/the/template }}\n        <div class="wrapelement">\n            {{> new/template/path }}\n        </div>\n    {{/ original/path/to/the/template }}\n{{/ original/path/parent }}\n')),(0,r.kt)("p",null,"Of even replace the fill block by an alternative HTML:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-handlebars"},'{{! Then include the parent template }}\n{{< original/path/parent }}\n    {{! Add custom blocks. }}\n    {{$ original/path/to/the/template }}\n        <div class="new elements">\n            Here you can use the template {{outputdata}}\n        </div>\n    {{/ original/path/to/the/template }}\n{{/ original/path/parent }}\n')))),(0,r.kt)("p",null,"Due to the fact that mustache blocks are not scoped, blocks can be overridden by any of the parent templates. This generates some possible scenarios depending on your format needs:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"#scenario-1-adding-blocks-directly-on-the-three-main-mustache-templates"},"Scenario 1"),":")," your format just overrides a few course elements like adding menu options o tweaking the sections or activity HTML."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"#scenario-2-keep-all-the-intermediate-templates-structure"},"Scenario 2"),":")," your plugin needs a big UI change, keeping the general structure but altering several course elements."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"#scenario-3-just-keep-a-few-renderer-methods"},"Scenario 3"),":")," Your plugin is a completely different thing that does not follow any standard course rule. Almost everything in your format is done from scratch.")),(0,r.kt)("h4",{id:"scenario-1-adding-blocks-directly-on-the-three-main-mustache-templates"},"Scenario 1: adding blocks directly on the three main mustache templates"),(0,r.kt)("p",null,"If your format only overrides a few inner templates of the course, the overriding blocks can be located in one of the 3 basic templates:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"local/content:")," for general course structure elements"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"local/content/section:")," to alter section elements"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"local/content/section/cmitem:")," to alter activity elements")),(0,r.kt)("details",null,(0,r.kt)("summary",null,"View example"),(0,r.kt)("div",null,(0,r.kt)("p",null,"If a format requires to override the activity visibility badges your format_pluginname/local/content/section/cmitem template will look like:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-handlebars"},"{{! include the original course format template block }}\n{{< core_courseformat/local/content/section/cmitem }}\n    {{! Add custom blocks here. }}\n    {{$ core_courseformat/local/content/section/badges }}\n        {{> format_pluginname/local/content/cm/badges }}\n    {{/ core_courseformat/local/content/section/badges }}\n{{/ core_courseformat/local/content/section/cmitem }}\n")))),(0,r.kt)("p",null,"Benefits of this approach:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Easy to maintain in a short term. All templates overrides are located on one of the 3 main templates."),(0,r.kt)("li",{parentName:"ul"},"Fewer files. The plugin only contains the three mains files and the overridden ones.")),(0,r.kt)("p",null,"Negatives of this approach:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Harder to maintain in the long run. Is it possible that the format must refactor the template structure if future versions require more main templates to be refreshed via ajax.")),(0,r.kt)("h4",{id:"scenario-2-keep-all-the-intermediate-templates-structure"},"Scenario 2: keep all the intermediate templates structure"),(0,r.kt)("p",null,"If your plugin needs a big UI change, altering a considerable number of the course elements at different levels (course, section and/or activity), the previous approach is not recommended as it may require more code refactoring in future versions."),(0,r.kt)("p",null,"To keep your plugin more stable through time the best approach is to override the mustache blocks at the inner parts of the mustache files structure instead of at the main elements. It will require more code but the final result will be more stable."),(0,r.kt)("details",null,(0,r.kt)("summary",null,"View example"),(0,r.kt)("div",null,(0,r.kt)("p",null,"Let's say your format requires overriding the activity visibility badges as in the previous scenario example. Apart from the three main templates, the plugin must create several new template overrides until it reacher the activity badges one:"),(0,r.kt)("p",null,"CM item main file: format_pluginname/local/content/section/cmitem template:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-handlebars"},"{{! include the original course format template block }}\n{{< core_courseformat/local/content/section/cmitem }}\n    {{$ core_courseformat/local/content/cm }}\n        {{> format_pluginname/local/content/cm }}\n    {{/ core_courseformat/local/content/cm }}\n{{/ core_courseformat/local/content/section/cmitem }}\n")),(0,r.kt)("p",null,"The content/cm template:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-handlebars"},"{{< core_courseformat/local/content/cm/activity }}\n    {{$ core_courseformat/local/content/cm/badges }}\n        {{> format_pluginname/local/content/cm/badges }}\n    {{/ core_courseformat/local/content/cm/badges }}\n{{/ core_courseformat/local/content/cm/activity }}\n")),(0,r.kt)("p",null,"The content/cm/badges will contain only the overridden HTML."),(0,r.kt)("p",null,"Apart from the templates files, the plugin could also provide overridden output classes to ensure that future versions will remain compatible if new ajax partials are required:"),(0,r.kt)("p",null,"In the example the extra output classes can look like:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php",metastring:'tile="format_pluginname\\output\\local\\content\\cm class"',tile:'"format_pluginname\\output\\local\\content\\cm','class"':!0},"<?php\nnamespace format_pluginname\\output\\courseformat\\content;\n\nclass cm extends \\core_courseformat\\output\\local\\content\\cm {\n    public function get_template_name(\\renderer_base $renderer): string {\n        return 'format_pluginname/local/content/cm;\n    }\n}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="format_pluginname\\output\\local\\content\\cm\\activity class"',title:'"format_pluginname\\output\\local\\content\\cm\\activity','class"':!0},"<?php\nnamespace format_pluginname\\output\\courseformat\\content\\cm;\n\nclass activity extends \\core_courseformat\\output\\local\\content\\cm\\activity {\n    public function get_template_name(\\renderer_base $renderer): string {\n        return 'format_pluginname/local/content/cm/activity;\n    }\n}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="format_pluginname\\output\\local\\content\\cm\\badge class"',title:'"format_pluginname\\output\\local\\content\\cm\\badge','class"':!0},"<?php\nnamespace format_pluginname\\output\\courseformat\\content\\cm;\n\nclass badge extends \\core_courseformat\\output\\local\\content\\cm\\badge {\n    public function get_template_name(\\renderer_base $renderer): string {\n        return 'format_pluginname/local/content/cm/badge;\n    }\n}\n")))),(0,r.kt)("p",null,"Benefits of this approach:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Easy to maintain in the long term. The code will remain the same if future versions require more main templates."),(0,r.kt)("li",{parentName:"ul"},"Overridden templates can be rendered as a regular course format output. Because each of the overridden mustaches has also its output class, the course format subsystem can render them independently.")),(0,r.kt)("p",null,"Negatives of this approach:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Requires extra files to keep the structure. Most of the files are just there to ensure the course format subsystem knows how to render them if needed in the future.")),(0,r.kt)("h4",{id:"scenario-3-just-keep-a-few-renderer-methods"},"Scenario 3: just keep a few renderer methods"),(0,r.kt)("p",null,"If your plugin is a completely different thing from a regular course you are most likely on your own. Your format may use a completely different set of renderer methods or output classes and you already have your own template structure."),(0,r.kt)("p",null,"In that case, you may keep it that way. However, there are a few things you could add to your plugin in order to make it compatible with the new course output. Take in mind that the new course editor expects some conventions about renderer methods that should be easy to incorporate into your plugin."),(0,r.kt)("p",null,"The first thing you should add is all the section and activities data attributes (see ",(0,r.kt)("a",{parentName:"p",href:"#course-elements-data-attributes"},"course elements data attributes"),". The new course editor did not use CSS classes anymore but data attributes. If your format should be able to interact with the standard editor those attributes are necessary."),(0,r.kt)("p",null,"Secondly, the new frontend JS modules use renderer methods to refresh a full section or an activity. If your format wants to keep this feature you should implement two methods on your renderer class:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"course_section_updated:")," to render a single section."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"course_section_updated_cm_item:"),' to render a single course module item. Note that this method does not render an activity card only but also the full course item. In a regular course, this also includes the "li" element.')),(0,r.kt)("p",null,'And third, consider using "local/content" as your main course template, "output\\local\\content" as your main output class or, if you don\'t use output classes, use the render_content renderer method to print a full course. Those are the expected names to render the full course. For now, they are only used in your plugin "format.php" file but nobody can guarantee this will continue this way in the future.'),(0,r.kt)("h2",{id:"the-course-editor-structure"},"The course editor structure"),(0,r.kt)("p",null,"The core_courseformat provides several JavaScript modules that will be enabled when a teacher edits the course. Those libraries use a reactive pattern to keep the course updated when some edit action is executed."),(0,r.kt)("p",null,"The following diagram represents the data flow of the new architecture:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Course editor workflow",src:n(6719).Z,width:"1024",height:"768"})),(0,r.kt)("h3",{id:"enabling-the-course-editor"},"Enabling the course editor"),(0,r.kt)("p",null,"To enable the course editor in your format you should add the following method to your format base class (in your course/format/pluginname/lib.php):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"/**\n * Enable the component based content.\n */\npublic function supports_components() {\n    return true;\n}\n")),(0,r.kt)("h3",{id:"course-elements-data-attributes"},"Course elements data attributes."),(0,r.kt)("p",null,"The course editor modules use data attributes to find the course elements in the page. If your plugin alters the default templates you should keep those attributes in your HTML structure."),(0,r.kt)("p",null,"The following table describes the data attributes:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Concept"),(0,r.kt)("th",{parentName:"tr",align:null},"Required data attributes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Section")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'data-for="section"'),(0,r.kt)("br",null),(0,r.kt)("inlineCode",{parentName:"td"},"data-id={SECTION.ID}"),(0,r.kt)("br",null),(0,r.kt)("inlineCode",{parentName:"td"},"data-number={SECTION.NUM}"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Section header")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'data-for="section_title"'),(0,r.kt)("br",null),(0,r.kt)("inlineCode",{parentName:"td"},"data-id={SECTION.ID}<br/>data-number={SECTION.NUM}"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Course module item (activity)")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'data-for="cmitem"'),(0,r.kt)("br",null),(0,r.kt)("inlineCode",{parentName:"td"},"data-id={CM.ID}"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Course sections list")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'data-for="course_sectionlist"'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Section course modules list")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'data-for="cmlist"'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Course module action link")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"data-action={ACTIONNAME}"),(0,r.kt)("br",null),(0,r.kt)("inlineCode",{parentName:"td"},"data-id={CM.ID}"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Section action link")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"data-action={ACTIONNAME}"),(0,r.kt)("br",null),(0,r.kt)("inlineCode",{parentName:"td"},"data-id={SECTION.ID}"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Section info")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'data-for="sectioninfo"'))))))}x.isMDXComponent=!0},74936:function(e,t){"use strict";t.Z="defined('MOODLE_INTERNAL') || die();\n\nrequire_once($CFG->libdir . '/filelib.php');\nrequire_once($CFG->libdir . '/completionlib.php');\n\n// Retrieve course format option fields and add them to the $course object.\n$format = core_courseformat\\base::instance($course);\n$course = $format->get_course();\n$context = context_course::instance($course->id);\n\n// Add any extra logic here.\n\n// Make sure section 0 is created.\ncourse_create_sections_if_missing($course, 0);\n\n$renderer = $format->get_renderer($PAGE);\n\n// Setup the format base instance.\nif (!empty($displaysection)) {\n$format->set_section_number($displaysection);\n}\n// Output course content.\n$outputclass = $format->get_output_classname('content');\n$widget = new $outputclass($format);\necho $renderer->render($widget);\n\n// Include any format js module here using $PAGE->requires->js.\n"},6719:function(e,t,n){"use strict";t.Z=n.p+"assets/images/course_editor_workflow-ed9299531897af09aabc760f3d3a3ae5.png"},84539:function(e,t,n){"use strict";t.Z=n.p+"assets/images/course_format_output-cc6218fac14403f9fcffdcb1eef001ec.png"}}]);