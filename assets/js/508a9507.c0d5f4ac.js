"use strict";(self.webpackChunkdevdocs=self.webpackChunkdevdocs||[]).push([[22546],{45274:function(e,t,a){a.r(t),a.d(t,{assets:function(){return p},contentTitle:function(){return m},default:function(){return h},frontMatter:function(){return l},metadata:function(){return d},toc:function(){return c}});var o=a(83117),n=a(80102),i=(a(67294),a(3905)),s=a(13904),r=["components"],l={title:"Form Usage",tags:["core_form","form","core","API"],documentationDraft:!0},m=void 0,d={unversionedId:"apis/subsystems/form/usage",id:"apis/subsystems/form/usage",title:"Form Usage",description:"Moodle's Form API is an extension of the Pear HTMLQuickForm API, which is no longer supported. Some documentation for the upstream library is available in the PEAR package page, including a short tutorial. A longer tutorial is also available, courtesy of the Internet Archive.",source:"@site/docs/apis/subsystems/form/usage.md",sourceDirName:"apis/subsystems/form",slug:"/apis/subsystems/form/usage",permalink:"/devdocs/docs/apis/subsystems/form/usage",draft:!1,editUrl:"https://github.com/moodle/devdocs/edit/main/docs/apis/subsystems/form/usage.md",tags:[{label:"core_form",permalink:"/devdocs/docs/tags/core-form"},{label:"form",permalink:"/devdocs/docs/tags/form"},{label:"core",permalink:"/devdocs/docs/tags/core"},{label:"API",permalink:"/devdocs/docs/tags/api"}],version:"current",lastUpdatedBy:"Andrew Lyons",lastUpdatedAt:1655463803,formattedLastUpdatedAt:"17/06/2022",frontMatter:{title:"Form Usage",tags:["core_form","form","core","API"],documentationDraft:!0},sidebar:"docs",previous:{title:"Repeat elements",permalink:"/devdocs/docs/apis/subsystems/form/advanced/repeat-elements"},next:{title:"Groups API",permalink:"/devdocs/docs/apis/subsystems/group/"}},p={},c=[{value:"Basic Usage in A Normal Page",id:"basic-usage-in-a-normal-page",level:2},{value:"Defining Your Form Class",id:"defining-your-form-class",level:2},{value:"definition()",id:"definition",level:3},{value:"Use in Activity Modules Add / Update Forms",id:"use-in-activity-modules-add--update-forms",level:2},{value:"defaults_preprocessing",id:"defaults_preprocessing",level:3},{value:"Post Processing",id:"post-processing",level:3},{value:"Standard activity form elements",id:"standard-activity-form-elements",level:3}],u={toc:c};function h(e){var t=e.components,a=(0,n.Z)(e,r);return(0,i.kt)("wrapper",(0,o.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)(s.Z,(0,o.Z)({frontMatter:l},void 0!==d?{metadata:d}:{},{mdxType:"MoodlePageBanner"})),(0,i.kt)("p",null,"Moodle's Form API is an extension of the Pear HTML_QuickForm API, which is no longer supported. Some documentation for the upstream library is ",(0,i.kt)("a",{parentName:"p",href:"http://pear.php.net/package/HTML_QuickForm"},"available in the PEAR package page"),", including a ",(0,i.kt)("a",{parentName:"p",href:"http://pear.php.net/manual/en/package.html.html-quickform.tutorial.php"},"short tutorial"),". A ",(0,i.kt)("a",{parentName:"p",href:"http://web.archive.org/web/20130630141100/http://www.midnighthax.com/quickform.php"},"longer tutorial is also available"),", courtesy of the Internet Archive."),(0,i.kt)("p",null,"Moodle will attempt to provide a more complete tutorial in this documentation where possible."),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Some good examples of usage of the Forms API can be found at the following locations:"),(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/moodle/moodle/blob/master/course/edit_form.php"},"Course edit form - definition")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/moodle/moodle/blob/master/course/edit.php"},"Course edit form - usage"))))),(0,i.kt)("p",null,"Whilst much of the API originates in the PEAR package, all interaction with the library should be via the ",(0,i.kt)("inlineCode",{parentName:"p"},"moodleform")," class, which acts as a controlling wrapper to HTML_QuickForm."),(0,i.kt)("h2",{id:"basic-usage-in-a-normal-page"},"Basic Usage in A Normal Page"),(0,i.kt)("p",null,"Generally the structure of a page with a form on it looks like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},"// You will process some page parameters at the top here and get the info about\n// what instance of your module and what course you're in etc. Make sure you\n// include hidden variable in your forms which have their defaults set in set_data\n// which pass these variables from page to page.\n\n// Setup $PAGE here.\n\n// Instantiate the form that you defined.\n$mform = new \\plugintype_pluginname\\form\\myform();\n// Default 'action' for form is strip_querystring(qualified_me()).\n\n// Set the initial values, for example the existing data loaded from the database.\n// This is typically an array of name/value pairs that match the\n// names of data elements in the form.\n// You can also use an object.\n$mform->set_data($toform);\n\nif ($mform->is_cancelled()) {\n    // You need this section if you have a cancel button on your form.\n    // You use this section to handle what to do if your user presses the cancel button.\n    // This is often a redirect back to an older page.\n    // NOTE: is_cancelled() should be called before get_data().\n    redirect($returnurl);\n\n} else if ($fromform = $mform->get_data()) {\n    // This branch is where you process validated data.\n\n    // Typically you finish up by redirecting to somewhere where the user\n    // can see what they did.\n    redirect($nexturl);\n}\n\n// If the formw as not cancelled, and data was not submitted, then display the form.\necho $OUTPUT->header();\n$mform->display();\necho $OUTPUT->footer();\n")),(0,i.kt)("p",null,"You are encouraged to look at ",(0,i.kt)("inlineCode",{parentName:"p"},"lib/formslib.php")," to see what additional functions and parameters are available. Available functions are well commented."),(0,i.kt)("h2",{id:"defining-your-form-class"},"Defining Your Form Class"),(0,i.kt)("p",null,"The form class tells us about the structure of the form."),(0,i.kt)("p",null,"In most cases you can place this in an auto-loadable class, in which case it should be placed in a folder named ",(0,i.kt)("inlineCode",{parentName:"p"},"form"),", for example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="mod/forum/classes/form/myform.php',title:'"mod/forum/classes/form/myform.php'},"<?php\n\nnamespace mod_forum\\form;\n\nclass myform extends \\moodleform {\n    // ...\n}\n")),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Historically it was not possible to auto-load classes. As a result, there are many parts of the core codebase which will manually require a file and expect a non-namespaced class name."),(0,i.kt)("p",{parentName:"div"},"One example of this is in the activity edit form, which must be named ",(0,i.kt)("inlineCode",{parentName:"p"},"mod_[modname]_mod_form")," and can either be located in ",(0,i.kt)("inlineCode",{parentName:"p"},"mod/[modname]/classes/mod_form.php")," or in ",(0,i.kt)("inlineCode",{parentName:"p"},"mod/[modname]/mod_form.php"),"."))),(0,i.kt)("p",null,"The name you give the class is used as the ",(0,i.kt)("inlineCode",{parentName:"p"},"id")," attribute of your form in html. Any trailing '_form' is removed. Your form class name should be unique in order for it to be selectable in CSS by theme designers who may want to adjust the css just for that form."),(0,i.kt)("h3",{id:"definition"},"definition()"),(0,i.kt)("p",null,"Form definition is defined in further detail in the ",(0,i.kt)("a",{parentName:"p",href:"https://docs.moodle.org/dev/lib/formslib.php_Form_Definition"},"Form definition")," documentation."),(0,i.kt)("h2",{id:"use-in-activity-modules-add--update-forms"},"Use in Activity Modules Add / Update Forms"),(0,i.kt)("p",null,"The same form is used to create or edit an activity, but some legacy constraints still apply:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The form ",(0,i.kt)("em",{parentName:"li"},"must")," be named ",(0,i.kt)("inlineCode",{parentName:"li"},"mod_[modname]_mod_form")),(0,i.kt)("li",{parentName:"ul"},"The class ",(0,i.kt)("em",{parentName:"li"},"must")," be located in either:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"mod/[modname]/mod_form.php"),"; or"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"mod/[modname]/classes/mod_form.php")))),(0,i.kt)("li",{parentName:"ul"},"The form ",(0,i.kt)("em",{parentName:"li"},"must")," extend the ",(0,i.kt)("inlineCode",{parentName:"li"},"moodleform_mod")," class.")),(0,i.kt)("h3",{id:"defaults_preprocessing"},"defaults_preprocessing"),(0,i.kt)("p",null,"Since the data for the activity editing form is automatically filled from the database, you may need to pre-process this data to set values for some form fields. For example, in the Forum activity, in some situations a Unix Time Stamp is used to set a boolean checkbox."),(0,i.kt)("p",null,"This can be achieved using the ",(0,i.kt)("inlineCode",{parentName:"p"},"defaults_preprocessing")," method."),(0,i.kt)("h3",{id:"post-processing"},"Post Processing"),(0,i.kt)("p",null,"Whilst the pre-processing stage is performed in the ",(0,i.kt)("inlineCode",{parentName:"p"},"defaults_preprocessing")," function, all post-processing is perform in the ",(0,i.kt)("inlineCode",{parentName:"p"},"[modname]_add_instance")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"[modname]_update_instance")," functions in the activities ",(0,i.kt)("inlineCode",{parentName:"p"},"lib.php"),"."),(0,i.kt)("p",null,"These are called ",(0,i.kt)("em",{parentName:"p"},"after")," data bas been validated by the Forms API."),(0,i.kt)("h3",{id:"standard-activity-form-elements"},"Standard activity form elements"),(0,i.kt)("p",null,"Moodle has a set of standard form elements used by all Activity modules. These allow for consistent control over activity visibility, group modes, and other common APIs."),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"standard_coursemodule_elements()")," function is used to add these common elements, and it should be called ",(0,i.kt)("em",{parentName:"p"},"before")," the standard action elements are added, for example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},"class mod_example_mod_form extends \\moodleform_mod {\n    public function definition() {\n        // Add the various form elements.\n        $this->_form->addElement( ... );\n\n        // Add the standard elements.\n        $this->standard_coursemodule_elements();\n\n        // Add the form actions.\n        $this->add_action_buttons();\n    }\n}\n")))}h.isMDXComponent=!0}}]);