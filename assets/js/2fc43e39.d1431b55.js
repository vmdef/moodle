"use strict";(self.webpackChunkdevdocs=self.webpackChunkdevdocs||[]).push([[31474],{60620:function(e,t,n){n.d(t,{nR:function(){return s}});var r=n(67294),i=n(80069),o=n(3905),l=n(78989),a=function(e){return"boolean"!=typeof e&&e?"string"==typeof e||r.isValidElement(e)?r.createElement(o.Zo,null,e):r.createElement(o.Zo,null,r.createElement(e,null)):null},s=function(e){var t,n,s,u=function(e){return Object.assign({filetype:"php",examplePurpose:e.summary},e)}(Object.assign({examplePurpose:null!=(t=null==e?void 0:e.summary)?t:null},e));(u.description=function(e,t){var n=e.description,i=void 0===n?null:n,l=e.extraDescription,s=void 0===l?null:l,u=e.children,p=void 0===u?null:u;if(p){var c=a(p);return r.createElement(o.Zo,null,c)}if(i){var d=a(i);return r.createElement(o.Zo,null,d)}var m=a(t),f=a(s);return m?r.createElement(o.Zo,null,m,f):null}(u,null!=(n=null==u?void 0:u.defaultDescription)?n:null),null!=u&&u.example||null!=u&&u.defaultExample)&&(u.example=(0,l.W7)(u,null!=(s=null==u?void 0:u.defaultExample)?s:null));return(0,i.Z)(u)}},80069:function(e,t,n){n.d(t,{Z:function(){return p}});var r=n(67294),i=n(87918),o=n(80684),l=n(86886),a=n(34673),s=n(3905),u=function(e,t,n){return void 0===n&&(n="info"),r.createElement(l.ZP,{item:!0,key:e},r.createElement(o.Z,{title:t},r.createElement(i.Z,{label:e,color:n})))};function p(e){var t=e.filepath,n=e.summary,i=function(e){var t=e.required,n=void 0!==t&&t,r=e.legacy,i=void 0!==r&&r,o=e.deprecated,l=void 0!==o&&o,a=e.refreshedDuringUpgrade,s=void 0!==a&&a,p=e.refreshedDuringPurge,c=void 0!==p&&p,d=[];return s&&d.push(u("Upgradable","Changes to this file or directory will be re-applied during a Moodle upgrade. If you make any changes to it, you can simply increment the version number and perform a Moodle upgrade.","info")),c&&d.push(u("Refreshed on cache purge","The contents of this file or directory are cached. To see your changes you can simply purge Moodle's caches and refresh the page.","info")),n&&d.push(u("Required","This file must be present","success")),i&&d.push(u("Legacy","Use of this file is being phased out. It is still supported for older installations but will be removed..","warning")),l&&d.push(u("Deprecated","Use of this file is deprecated and not recommended.It may still be provided for older versions of Moodle but is no longer used.","error")),d}(e),o=e.description?r.createElement(l.ZP,{item:!0,xs:12},e.description):null;return r.createElement(s.Zo,null,r.createElement(l.ZP,{container:!0,spacing:2},r.createElement(l.ZP,{item:!0,xs:6},r.createElement("h4",null,n)),r.createElement(l.ZP,{item:!0,xs:6},r.createElement(l.ZP,{container:!0,spacing:2,justifyContent:"flex-end"},i)),r.createElement(l.ZP,{item:!0,xs:12},r.createElement("h5",null,"File path:"," ",t)),o,function(e){var t=e.example,n=e.open,i=void 0!==n&&n;return t?r.createElement(l.ZP,{item:!0,xs:12},r.createElement(a.Z,{summary:r.createElement("summary",null,"View example"),open:i},t)):null}(e)))}},78989:function(e,t,n){n.d(t,{W7:function(){return d}});var r,i=n(67294),o=n(46975),l=JSON.parse('{"plugintypes":{"antivirus":"lib/antivirus","availability":"availability/condition","qtype":"question/type","mod":"mod","auth":"auth","calendartype":"calendar/type","customfield":"customfield/field","enrol":"enrol","message":"message/output","block":"blocks","media":"media/player","filter":"filter","editor":"lib/editor","format":"course/format","dataformat":"dataformat","profilefield":"user/profile/field","report":"report","coursereport":"course/report","gradeexport":"grade/export","gradeimport":"grade/import","gradereport":"grade/report","gradingform":"grade/grading/form","mlbackend":"lib/mlbackend","mnetservice":"mnet/service","webservice":"webservice","repository":"repository","portfolio":"portfolio","search":"search/engine","qbank":"question/bank","qbehaviour":"question/behaviour","qformat":"question/format","plagiarism":"plagiarism","tool":"admin/tool","cachestore":"cache/stores","cachelock":"cache/locks","fileconverter":"files/converter","contenttype":"contentbank/contenttype","theme":"theme","local":"local","h5plib":"h5p/h5plib","paygw":"payment/gateway"},"subsystems":{"access":null,"admin":"admin","adminpresets":"admin/presets","analytics":"analytics","antivirus":"lib/antivirus","auth":"auth","availability":"availability","backup":"backup/util/ui","badges":"badges","block":"blocks","blog":"blog","bulkusers":null,"cache":"cache","calendar":"calendar","cohort":"cohort","comment":"comment","competency":"competency","completion":"completion","contentbank":"contentbank","countries":null,"course":"course","courseformat":"course/format","currencies":null,"customfield":"customfield","dbtransfer":null,"debug":null,"editor":"lib/editor","edufields":null,"enrol":"enrol","error":null,"favourites":"favourites","filepicker":null,"fileconverter":"files/converter","files":"files","filters":"filter","form":"lib/form","grades":"grade","grading":"grade/grading","group":"group","help":null,"hub":null,"h5p":"h5p","imscc":null,"install":null,"iso6392":null,"langconfig":null,"license":null,"mathslib":null,"media":"media","message":"message","mimetypes":null,"mnet":"mnet","my":"my","notes":"notes","pagetype":null,"payment":"payment","pix":null,"plagiarism":"plagiarism","plugin":null,"portfolio":"portfolio","privacy":"privacy","question":"question","rating":"rating","reportbuilder":"reportbuilder","repository":"repository","rss":"rss","role":"admin/roles","search":"search","table":"lib/table","tag":"tag","timezones":null,"user":"user","userkey":"lib/userkey","webservice":"webservice","xapi":"lib/xapi"}}'),a=function(e){return function(t){var n=t.plugintype,r=void 0===n?"plugintype":n,i=t.pluginname,o=void 0===i?"pluginname":i,l=t.filepath,a=void 0===l?null:l,s=function(e){return function(t){return e.plugintypes[t]?e.plugintypes[t]:"[path/to/"+t+"]"}}(e)(r);return""+(s+=o?"/"+o:"/[pluginname]")+a}},s=a(l),u=(s(l),function(e){if(!e.showFileHeader)return"";switch(null==e?void 0:e.filetype){case"xml":return"";case"js":case"javascript":return function(e){var t=e.plugintype,n=void 0===t?"plugintype":t,r=e.pluginname,i=void 0===r?"pluginname":r,o=e.examplePurpose,l=e.modulename;if(!o)throw Error("Purpose must be specified");if(!l)throw Error("AMD Module name must be specified");return["/**"," * "+o+" for the "+n+"_"+i+" plugin."," *"," * @module   "+n+"_"+i+"/"+l," * @copyright Year, You Name <your@email.address>"," * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later"," */",""].join("\n")}(e);default:return function(e){var t=e.plugintype,n=void 0===t?"plugintype":t,r=e.pluginname,i=void 0===r?"pluginname":r,o=e.examplePurpose;if(!o)throw Error("Purpose must be specified");return["/**"," * "+o+" for the "+n+"_"+i+" plugin."," *"," * @package   "+n+"_"+i," * @copyright Year, You Name <your@email.address>"," * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later"," */",""].join("\n")}(e)}}),p=function(e){return e.showLicense?(e.filetype,"// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n"):""},c=function(e){var t=e.filetype,n=void 0===t?"php":t;switch(n){case"js":case"javascript":return"javascript";case"xml":return"xml";case"php":case null:return"php";default:return n}},d=(r=l,function(e,t){var n,l=Object.assign({plugintype:"plugintype",showLicense:!0,showFileHeader:!0,filepath:null!=(n=e.exampleFilepath)?n:e.filepath},e),s=a(r),d=function(e,t){void 0===t&&(t=null);var n=[p(e),u(e),e.example?e.example:t||null].filter((function(e){return e})).map((function(e){return e.trim()})).join("\n\n");return[function(e){var t=e.filetype;switch(void 0===t?"php":t){case"js":case"javascript":case"xml":return null;default:return"<?php"}}(e),n].filter((function(e){return e})).join("\n")}(l,t);return i.createElement(o.Z,{title:s(l),language:c(l)},d)})},72557:function(e,t,n){n.r(t),n.d(t,{assets:function(){return y},contentTitle:function(){return v},default:function(){return _},frontMatter:function(){return h},metadata:function(){return g},toc:function(){return b}});var r=n(83117),i=n(80102),o=n(67294),l=n(3905),a=n(13904),s=n(60620),u=["components"],p={},c={toc:[]};function d(e){var t=e.components,n=(0,i.Z)(e,u);return(0,l.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)(a.Z,(0,r.Z)({frontMatter:p},"undefined"!=typeof metadata?{metadata:metadata}:{},{mdxType:"MoodlePageBanner"})),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"classes/converter.php")," class must be defined in the correct namespace for your plugin, and must implement the ",(0,l.kt)("inlineCode",{parentName:"p"},"\\core_files\\converter_interface")," interface."),(0,l.kt)("p",null,"It is responsible for converting files"))}d.isMDXComponent=!0;var m=function(e){return o.createElement(s.nR,(0,r.Z)({defaultDescription:d,defaultExample:"\nnamespace fileconverter_myexample;\n\nclass converter implements core_filesconverter_interface {\n    // ...\n}\n",examplePurpose:"File conversion implementation",filepath:"/classes/converter.php",summary:"File conversion implementation"},e))},f=["components"],h={title:"File Converters",tags:["File","core_file","file_converter","API","PDF","Conversion","Document"]},v=void 0,g={unversionedId:"apis/plugintypes/fileconverter/index",id:"apis/plugintypes/fileconverter/index",title:"File Converters",description:"File converters are an important tool to support other plugins with file conversion supported between a wide range of file formats. File converters are accessed using the File conversion API and are typically consumed by other plugins rather than by the user directly.",source:"@site/docs/apis/plugintypes/fileconverter/index.md",sourceDirName:"apis/plugintypes/fileconverter",slug:"/apis/plugintypes/fileconverter/",permalink:"/devdocs/docs/apis/plugintypes/fileconverter/",draft:!1,editUrl:"https://github.com/moodle/devdocs/edit/main/docs/apis/plugintypes/fileconverter/index.md",tags:[{label:"File",permalink:"/devdocs/docs/tags/file"},{label:"core_file",permalink:"/devdocs/docs/tags/core-file"},{label:"file_converter",permalink:"/devdocs/docs/tags/file-converter"},{label:"API",permalink:"/devdocs/docs/tags/api"},{label:"PDF",permalink:"/devdocs/docs/tags/pdf"},{label:"Conversion",permalink:"/devdocs/docs/tags/conversion"},{label:"Document",permalink:"/devdocs/docs/tags/document"}],version:"current",lastUpdatedBy:"Andrew Lyons",lastUpdatedAt:1655463803,formattedLastUpdatedAt:"17/06/2022",frontMatter:{title:"File Converters",tags:["File","core_file","file_converter","API","PDF","Conversion","Document"]},sidebar:"docs",previous:{title:"Enrolment plugins",permalink:"/devdocs/docs/apis/plugintypes/enrol/"},next:{title:"Filter plugins",permalink:"/devdocs/docs/apis/plugintypes/filter/"}},y={},b=[{value:"File structure",id:"file-structure",level:2},{value:"Converter class",id:"converter-class",level:3},{value:"are_requirements_met()",id:"are_requirements_met",level:4},{value:"start_document_conversion() and poll_conversion_status()",id:"start_document_conversion-and-poll_conversion_status",level:4},{value:"supports()",id:"supports",level:4},{value:"get_supported_conversion()",id:"get_supported_conversion",level:4},{value:"See also",id:"see-also",level:2}],k={toc:b};function _(e){var t=e.components,n=(0,i.Z)(e,f);return(0,l.kt)("wrapper",(0,r.Z)({},k,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)(a.Z,(0,r.Z)({frontMatter:h},void 0!==g?{metadata:g}:{},{mdxType:"MoodlePageBanner"})),(0,l.kt)("p",null,"File converters are an important tool to support other plugins with file conversion supported between a wide range of file formats. File converters are accessed using the ",(0,l.kt)("a",{parentName:"p",href:"/devdocs/docs/apis/subsystems/files/converter"},"File conversion API")," and are typically consumed by other plugins rather than by the user directly."),(0,l.kt)("h2",{id:"file-structure"},"File structure"),(0,l.kt)("p",null,"File converter plugins are located in the ",(0,l.kt)("inlineCode",{parentName:"p"},"/file/converter")," directory."),(0,l.kt)("p",null,"Each plugin is in a separate subdirectory and consists of a number of ",(0,l.kt)("em",{parentName:"p"},"mandatory files")," and any other files the developer is going to use."),(0,l.kt)("details",null,(0,l.kt)("summary",null,"View an example directory layout for the `fileconverter_unoconv` plugin."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-console"},"files/converter/unoconv\n\u251c\u2500\u2500 classes\n\u2502\xa0\xa0 \u251c\u2500\u2500 converter.php\n\u2502\xa0\xa0 \u2514\u2500\u2500 privacy\n\u2502\xa0\xa0     \u2514\u2500\u2500 provider.php\n\u251c\u2500\u2500 lang\n\u2502\xa0\xa0 \u2514\u2500\u2500 en\n\u2502\xa0\xa0     \u2514\u2500\u2500 fileconverter_unoconv.php\n\u251c\u2500\u2500 settings.php\n\u2514\u2500\u2500 version.php\n"))),(0,l.kt)("p",null,"Some of the important files for the fileconverter plugintype are described below. See the ",(0,l.kt)("a",{parentName:"p",href:"../commonfiles"},"common plugin files")," documentation for details of other files which may be useful in your plugin."),(0,l.kt)("h3",{id:"converter-class"},"Converter class"),(0,l.kt)(m,{pluginname:"example",required:!0,mdxType:"Converter"}),(0,l.kt)("h4",{id:"are_requirements_met"},"are_requirements_met()"),(0,l.kt)("p",null,"This function informs the File Converter API whether the system requirements of the plugin are met. That is whether appropriate API keys are present, and the API might be available."),(0,l.kt)("p",null,"It should be lightweight to call and cache where required."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="Example implementation"',title:'"Example','implementation"':!0},"public static function are_requirements_met() {\n    return extension_loaded('my_php_extension');\n}\n")),(0,l.kt)("h4",{id:"start_document_conversion-and-poll_conversion_status"},"start_document_conversion() and poll_conversion_status()"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"start_document_conversion()")," function starts a conversion, whilst ",(0,l.kt)("inlineCode",{parentName:"p"},"poll_conversion_status")," should poll for any status update. The following apply:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"If any failures occur, it should set the conversion status to ",(0,l.kt)("inlineCode",{parentName:"li"},"\\core_files\\conversion::STATUS_FAILED")," and immediately return.  There is no need to update the ",(0,l.kt)("inlineCode",{parentName:"li"},"$conversion")," record in this situation."),(0,l.kt)("li",{parentName:"ul"},"When the conversion process starts, the status should be set to ",(0,l.kt)("inlineCode",{parentName:"li"},"\\core_files\\conversion::STATUS_IN_PROGRESS")," and the record ",(0,l.kt)("strong",{parentName:"li"},"must")," be updated. This ensures that, should the process take a long time, the current status is accurately reflected."),(0,l.kt)("li",{parentName:"ul"},"Upon successful completion, the status should be updated to ",(0,l.kt)("inlineCode",{parentName:"li"},"\\core_files\\conversion::STATUS_COMPLETE")," and the newly created ",(0,l.kt)("inlineCode",{parentName:"li"},"\\stored_file")," should be stored against the conversion using either the ",(0,l.kt)("inlineCode",{parentName:"li"},"store_destfile_from_string")," or ",(0,l.kt)("inlineCode",{parentName:"li"},"store_destfile_from_path")," function as appropriate.")),(0,l.kt)("h4",{id:"supports"},"supports()"),(0,l.kt)("p",null,"This function allows the plugin to answer whether it supports conversion between two formats. It is typically only used internally by the File Conversion subsystem."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="Example implementation"',title:'"Example','implementation"':!0},"class converter implements \\core_files\\converter_interface {\n    // ...\n    public static function supports($from, $to) {\n        // This plugin supports conversion from doc and docx to pdf only.\n        if ($from !== 'doc' && $from !== 'docx') {\n            return false;\n        }\n\n        return $to === 'pdf';\n    }\n}\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="Example usage"',title:'"Example','usage"':!0},"if (\\fileconverter_example::supports('jpg', 'pdf')) {\n    // ...\n}\n")),(0,l.kt)("h4",{id:"get_supported_conversion"},"get_supported_conversion()"),(0,l.kt)("p",null,"This function is used purely for information purposes to display possible conversions to an administrator."),(0,l.kt)("h2",{id:"see-also"},"See also"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Using the ",(0,l.kt)("a",{parentName:"li",href:"/devdocs/docs/apis/subsystems/files/converter"},"File Converter API"))))}_.isMDXComponent=!0}}]);