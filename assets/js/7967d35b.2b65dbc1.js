"use strict";(self.webpackChunkdevdocs=self.webpackChunkdevdocs||[]).push([[14533],{32344:function(e){e.exports=JSON.parse('{"label":"Quality Assurance","permalink":"/devdocs/docs/tags/quality-assurance","allTagsPath":"/devdocs/docs/tags","count":2,"items":[{"id":"moodleapp/development/testing/acceptance-testing","title":"Acceptance testing for the Moodle App","description":"In order to run tests that carry out automated functionality testing for the Moodle App, you can write Acceptance tests. This can be useful if you want to test plugins that are compatible with the app, or you\'re contributing to the app core. Behat tests for the app work the same way as tests for Moodle core, but they are not run as part of a normal Behat execution and there are some differences that we\'ll go through in this page.","permalink":"/devdocs/docs/moodleapp/development/testing/acceptance-testing"},{"id":"moodleapp/development/testing/unit-testing","title":"Unit testing for the Moodle App","description":"Unit tests are written in JavaScript using Jest. If you want to create a new one, Jest is already configured and you only need to create a file ending with .test.ts within the project. If you\'re going to do so, remember to follow the file location conventions.","permalink":"/devdocs/docs/moodleapp/development/testing/unit-testing"}]}')}}]);